{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"Menu\",\n\n  data() {\n    return {\n      tableData: [],\n      total: 0,\n      currentPage: 1,\n      pageSize: 5,\n      name: \"\",\n      form: {},\n      dialogFormVisible: false,\n      options: [],\n      menuDialogVis: false,\n      multipleSelection: []\n    };\n  },\n\n  created() {\n    this.load();\n  },\n\n  methods: {\n    rowClass() {\n      return \"text-align:center\";\n    },\n\n    load() {\n      this.request.get(\"/menu\", {\n        params: {\n          name: this.name\n        }\n      }).then(res => {\n        this.tableData = res.data;\n      });\n      this.request.get(\"/menu/icons\").then(res => {\n        this.options = res.data;\n      });\n    },\n\n    save() {\n      this.request.post(\"/menu\", this.form).then(res => {\n        if (res.code === 200) {\n          this.$message.success(\"Successfully saved\");\n          this.dialogFormVisible = false;\n          this.load();\n        } else {\n          this.$message.error(\"Failed to save\");\n        }\n      });\n    },\n\n    handleAdd(pid) {\n      this.dialogFormVisible = true;\n      this.form = {};\n\n      if (pid) {\n        this.form.pid = pid;\n      }\n    },\n\n    handleEdit(row) {\n      this.form = JSON.parse(JSON.stringify(row));\n      this.dialogFormVisible = true;\n      this.request.get(\"/menu/icons\").then(res => {\n        this.options = res.data;\n      });\n    },\n\n    del(id) {\n      this.request.delete(\"/menu/\" + id).then(res => {\n        if (res.code === 200) {\n          this.$message.success(\"Successfully deleted\");\n          this.load();\n        } else {\n          this.$message.error(\"Failed to delete\");\n        }\n      });\n    },\n\n    handleSelectionChange(val) {\n      console.log(val);\n      this.multipleSelection = val;\n    },\n\n    delBatch() {\n      let ids = this.multipleSelection.map(v => v.id);\n      this.request.post(\"/menu/del/batch\", ids).then(res => {\n        if (res.code === 200) {\n          this.$message.success(\"Delete successfully\");\n          this.load();\n        } else {\n          this.$message.error(\"Failed to delete\");\n        }\n      });\n    },\n\n    // reset() {\n    //   this.name = \"\"\n    //   this.load()\n    // },\n    handleSizeChange(pageSize) {\n      console.log(pageSize);\n      this.pageSize = pageSize;\n      this.load();\n    },\n\n    handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      this.load();\n    },\n\n    cancel() {\n      this.$message.warning(\"Operation successfully canceled\");\n    },\n\n    formCancel() {\n      this.dialogFormVisible = false;\n      this.$message.warning(\"Form submission canceled\");\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGA;EACAA,YADA;;EAEAC;IACA;MACAC,aADA;MAEAC,QAFA;MAGAC,cAHA;MAIAC,WAJA;MAKAL,QALA;MAMAM,QANA;MAOAC,wBAPA;MAQAC,WARA;MAUAC,oBAVA;MAWAC;IAXA;EAaA,CAhBA;;EAiBAC;IACA;EACA,CAnBA;;EAoBAC;IACAC;MACA;IACA,CAHA;;IAIAC;MACA;QACAC;UACAf;QADA;MADA,GAIAgB,IAJA,CAIAC;QACA;MACA,CANA;MAQA;QACA;MACA,CAFA;IAGA,CAhBA;;IAiBAC;MACA;QACA;UACA;UACA;UACA;QACA,CAJA,MAIA;UACA;QACA;MACA,CARA;IASA,CA3BA;;IA4BAC;MACA;MACA;;MACA;QACA;MACA;IACA,CAlCA;;IAmCAC;MACA;MACA;MAEA;QACA;MACA,CAFA;IAGA,CA1CA;;IA2CAC;MACA;QACA;UACA;UACA;QACA,CAHA,MAGA;UACA;QACA;MACA,CAPA;IAQA,CApDA;;IAqDAC;MACAC;MACA;IACA,CAxDA;;IAyDAC;MACA;MACA;QACA;UACA;UACA;QACA,CAHA,MAGA;UACA;QACA;MACA,CAPA;IAQA,CAnEA;;IAoEA;IACA;IACA;IACA;IACAC;MACAF;MACA;MACA;IACA,CA5EA;;IA6EAG;MACA;MACA;IACA,CAhFA;;IAiFAC;MACA;IACA,CAnFA;;IAoFAC;MACA;MACA;IACA;;EAvFA;AApBA","names":["name","data","tableData","total","currentPage","pageSize","form","dialogFormVisible","options","menuDialogVis","multipleSelection","created","methods","rowClass","load","params","then","res","save","handleAdd","handleEdit","del","handleSelectionChange","console","delBatch","handleSizeChange","handleCurrentChange","cancel","formCancel"],"sourceRoot":"src/views","sources":["Menu.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div style=\"margin: 10px 0\">\r\n      <!-- <el-input style=\"width: 200px\" placeholder=\"Please enter the name\" suffix-icon=\"el-icon-search\" v-model=\"name\"></el-input>\r\n      <el-button class=\"ml-5\" type=\"primary\" @click=\"search\">Search</el-button>\r\n      <el-button type=\"warning\" @click=\"reset\">Reset</el-button> -->\r\n    </div>\r\n\r\n    <div style=\"margin: 10px 0\">\r\n      <el-button type=\"primary\" @click=\"handleAdd()\">Add root menu <i class=\"el-icon-circle-plus-outline\"></i></el-button>\r\n      <el-popconfirm\r\n          class=\"ml-5\"\r\n          confirm-button-text='DELETE'\r\n          cancel-button-text='CANCEL'\r\n          icon=\"el-icon-info\"\r\n          icon-color=\"red\"\r\n          title=\"Are you sure you want to delete these data?\"\r\n          @cancel=\"cancel\"\r\n          @confirm=\"delBatch\"\r\n      >\r\n        <el-button type=\"danger\" slot=\"reference\">Delete in bulk <i class=\"el-icon-remove-outline\"></i></el-button>\r\n      </el-popconfirm>\r\n    </div>\r\n\r\n    <el-table \r\n      :data=\"tableData\" \r\n      border \r\n      stripe \r\n      :header-cell-style=\"{ textAlign: 'center', background:'beige' }\" \r\n      :cell-style=\"rowClass\"\r\n      @selection-change=\"handleSelectionChange\"\r\n      row-key=\"id\"\r\n      default-expand-all>\r\n\r\n      <div slot=\"empty\" style=\"text-align: left;\">\r\n        <el-empty description=\"Sorry, there is no data you are looking for\" />\r\n      </div>\r\n      <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n      <!-- <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column> -->\r\n      <el-table-column prop=\"name\" label=\"Name\"></el-table-column>\r\n      <el-table-column prop=\"path\" label=\"Path\"></el-table-column>\r\n      <el-table-column prop=\"pagePath\" label=\"Page Path\"></el-table-column>\r\n      <el-table-column label=\"Icon\" class-name=\"fontSize18\" label-class-name=\"fontSize12\">\r\n        <template slot-scope=\"scope\">\r\n          <i :class=\"scope.row.icon\"></i>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"description\" label=\"Description\"></el-table-column>\r\n      <el-table-column label=\"Operation\"  width=\"350\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"primary\" @click=\"handleAdd(scope.row.id)\" v-if=\"!scope.row.pid && !scope.row.path\">Add submenu <i class=\"el-icon-plus\"></i></el-button>\r\n          <el-button type=\"success\" @click=\"handleEdit(scope.row)\">Edit <i class=\"el-icon-edit\"></i></el-button>\r\n          <el-popconfirm\r\n              class=\"ml-5\"\r\n              confirm-button-text='DELETE'\r\n              cancel-button-text='CANCEL'\r\n              icon=\"el-icon-info\"\r\n              icon-color=\"red\"\r\n              title=\"Are you sure to delete?\"\r\n              @confirm=\"del(scope.row.id)\"\r\n              @cancel=\"cancel\"\r\n          >\r\n            <el-button type=\"danger\" slot=\"reference\">Delete <i class=\"el-icon-remove-outline\"></i></el-button>\r\n          </el-popconfirm>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <el-dialog title=\"Menu Info\" :visible.sync=\"dialogFormVisible\" width=\"30%\" >\r\n      <el-form label-width=\"100px\" size=\"small\">\r\n        <el-form-item label=\"Name\">\r\n          <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Path\">\r\n          <el-input v-model=\"form.path\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Page Path\">\r\n          <el-input v-model=\"form.pagePath\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Icon\">\r\n          <el-select clearable v-model=\"form.icon\" placeholder=\"Please Choose\" style=\"width: 100%\">\r\n            <el-option v-for=\"item in options\" :key=\"item.name\" :label=\"item.name\" :value=\"item.value\">\r\n              <i :class=\"item.value\" /> {{ item.name }}\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"Description\">\r\n          <el-input v-model=\"form.description\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"formCancel\">Cancel</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">Save</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: \"Menu\",\r\n    data() {\r\n      return {\r\n        tableData: [],\r\n        total: 0,\r\n        currentPage: 1,\r\n        pageSize: 5,\r\n        name: \"\",\r\n        form: {},\r\n        dialogFormVisible: false,\r\n        options:[],\r\n\r\n        menuDialogVis: false,\r\n        multipleSelection: [],\r\n      }\r\n    },\r\n    created() {\r\n      this.load()\r\n    },\r\n    methods: {\r\n      rowClass(){\r\n        return \"text-align:center\"\r\n      },\r\n      load() {\r\n        this.request.get(\"/menu\", {\r\n          params: {\r\n            name: this.name,\r\n          }\r\n        }).then(res => {\r\n          this.tableData = res.data\r\n        })\r\n\r\n        this.request.get(\"/menu/icons\").then(res => {\r\n          this.options = res.data\r\n        })\r\n      },\r\n      save() {\r\n        this.request.post(\"/menu\", this.form).then(res => {\r\n          if (res.code === 200) {\r\n            this.$message.success(\"Successfully saved\")\r\n            this.dialogFormVisible = false\r\n            this.load()\r\n          } else {\r\n            this.$message.error(\"Failed to save\")\r\n          }\r\n        })\r\n      },\r\n      handleAdd(pid) {\r\n        this.dialogFormVisible = true\r\n        this.form = {}\r\n        if(pid){\r\n          this.form.pid = pid\r\n        }\r\n      },\r\n      handleEdit(row) {\r\n        this.form = JSON.parse(JSON.stringify(row))\r\n        this.dialogFormVisible = true\r\n\r\n        this.request.get(\"/menu/icons\").then(res => {\r\n          this.options = res.data\r\n        })\r\n      },\r\n      del(id) {\r\n        this.request.delete(\"/menu/\" + id).then(res => {\r\n          if (res.code === 200) {\r\n            this.$message.success(\"Successfully deleted\")\r\n            this.load()\r\n          } else {\r\n            this.$message.error(\"Failed to delete\")\r\n          }\r\n        })\r\n      },\r\n      handleSelectionChange(val) {\r\n        console.log(val)\r\n        this.multipleSelection = val\r\n      },\r\n      delBatch() {\r\n        let ids = this.multipleSelection.map(v => v.id)\r\n        this.request.post(\"/menu/del/batch\", ids).then(res => {\r\n          if (res.code === 200) {\r\n            this.$message.success(\"Delete successfully\")\r\n            this.load()\r\n          } else {\r\n            this.$message.error(\"Failed to delete\")\r\n          }\r\n        })\r\n      },\r\n      // reset() {\r\n      //   this.name = \"\"\r\n      //   this.load()\r\n      // },\r\n      handleSizeChange(pageSize) {\r\n        console.log(pageSize)\r\n        this.pageSize = pageSize\r\n        this.load()\r\n      },\r\n      handleCurrentChange(currentPage) {\r\n        this.currentPage = currentPage\r\n        this.load()\r\n      },\r\n      cancel(){\r\n        this.$message.warning(\"Operation successfully canceled\")\r\n      },\r\n      formCancel(){\r\n        this.dialogFormVisible = false\r\n        this.$message.warning(\"Form submission canceled\")\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .fontSize18{\r\n    font-size: 18px;\r\n  }\r\n  .fontSize12{\r\n    font-size: 12px;\r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module"}