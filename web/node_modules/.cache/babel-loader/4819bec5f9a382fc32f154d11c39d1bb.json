{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Aside from \"@/components/Aside\";\nimport Header from \"@/components/Header\";\nexport default {\n  name: 'Container',\n  components: {\n    Aside: Aside,\n    Header: Header\n  },\n  data: function data() {\n    return {\n      collapseBtnClass: 'el-icon-s-fold',\n      isCollapse: false,\n      sideWidth: 250\n    };\n  },\n  created: function created() {\n    this.loadPage();\n  },\n  methods: {\n    collapse: function collapse() {\n      this.isCollapse = !this.isCollapse;\n\n      if (this.isCollapse) {\n        this.sideWidth = 64;\n        this.collapseBtnClass = 'el-icon-s-unfold';\n      } else {\n        this.sideWidth = 250;\n        this.collapseBtnClass = 'el-icon-s-fold';\n      }\n    },\n    rowClass: function rowClass() {\n      return \"text-align:center\";\n    },\n    loadPage: function loadPage() {\n      var _this = this;\n\n      this.request.get(\"/market-trend/page\", {\n        params: {\n          currentPage: this.currentPage,\n          pageSize: this.pageSize,\n          crop: this.crop,\n          beginDate: this.dateVal[0],\n          endDate: this.dateVal[1]\n        }\n      }).then(function (res) {\n        console.log(res);\n        console.log(_this.dateVal);\n        _this.tableData = res.records;\n        _this.total = res.total;\n      });\n    },\n    handleSizeChange: function handleSizeChange(pageSize) {\n      this.pageSize = pageSize;\n      this.loadPage();\n    },\n    handleCurrentChange: function handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      this.loadPage();\n    },\n    handleAdd: function handleAdd() {\n      this.dialogFormVisible = true;\n      this.form = {};\n    },\n    save: function save() {\n      var _this2 = this;\n\n      this.request.post(\"/market-trend\", this.form).then(function (res) {\n        if (res) {\n          _this2.$message.success(\"Successfully saved\");\n\n          _this2.dialogFormVisible = false;\n\n          _this2.loadPage();\n        } else {\n          _this2.$message.error(\"Failed to save, please try again\");\n        }\n      });\n    },\n    handleEdit: function handleEdit(row) {\n      this.form = Object.assign({}, row);\n      this.dialogFormVisible = true;\n    },\n    del: function del(id) {\n      var _this3 = this;\n\n      this.request.delete(\"/market-trend/\" + id).then(function (res) {\n        if (res) {\n          _this3.$message.success(\"Successfully deleted\");\n\n          _this3.loadPage();\n        } else {\n          _this3.$message.error(\"Failed to delete\");\n        }\n      });\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    delBatch: function delBatch() {\n      var _this4 = this;\n\n      var ids = this.multipleSelection.map(function (v) {\n        return v.id;\n      });\n      this.request.post(\"/market-trend/batchDel\", ids).then(function (res) {\n        if (res) {\n          _this4.$message.success(\"Successfully deleted\");\n\n          _this4.loadPage();\n        } else {\n          _this4.$message.error(\"Failed to delete\");\n        }\n      });\n    },\n    reset: function reset() {\n      this.crop = \"\", this.dateVal = \"\", this.loadPage();\n    },\n    cancel: function cancel() {\n      this.$message.warning(\"Operation successfully canceled\");\n    },\n    formCancel: function formCancel() {\n      this.dialogFormVisible = false;\n      this.$message.warning(\"Form submission canceled\");\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;EACAA,iBADA;EAEAC;IACAC,YADA;IAEAC;EAFA,CAFA;EAMAC,IANA,kBAMA;IACA;MAGAC,kCAHA;MAIAC,iBAJA;MAKAC;IALA;EAOA,CAdA;EAeAC,OAfA,qBAeA;IACA;EACA,CAjBA;EAkBAC;IACAC,QADA,sBACA;MACA;;MACA;QACA;QACA;MACA,CAHA,MAGA;QACA;QACA;MACA;IACA,CAVA;IAWAC,QAXA,sBAWA;MACA;IACA,CAbA;IAcAC,QAdA,sBAcA;MAAA;;MACA;QACAC;UACAC,6BADA;UAEAC,uBAFA;UAGAC,eAHA;UAIAC,0BAJA;UAKAC;QALA;MADA,GAQAC,IARA,CAQA;QACAC;QACAA;QACA;QACA;MACA,CAbA;IAcA,CA7BA;IA8BAC,gBA9BA,4BA8BAN,QA9BA,EA8BA;MACA;MACA;IACA,CAjCA;IAkCAO,mBAlCA,+BAkCAR,WAlCA,EAkCA;MACA;MACA;IACA,CArCA;IAsCAS,SAtCA,uBAsCA;MACA;MAEA;IACA,CA1CA;IA2CAC,IA3CA,kBA2CA;MAAA;;MACA;QACA;UACA;;UACA;;UACA;QACA,CAJA,MAIA;UACA;QACA;MACA,CARA;IASA,CArDA;IAsDAC,UAtDA,sBAsDAC,GAtDA,EAsDA;MACA;MACA;IACA,CAzDA;IA0DAC,GA1DA,eA0DAC,EA1DA,EA0DA;MAAA;;MACA;QACA;UACA;;UACA;QACA,CAHA,MAGA;UACA;QACA;MACA,CAPA;IAQA,CAnEA;IAoEAC,qBApEA,iCAoEAC,GApEA,EAoEA;MACA;IACA,CAtEA;IAuEAC,QAvEA,sBAuEA;MAAA;;MACA;QAAA;MAAA;MACA;QACA;UACA;;UACA;QACA,CAHA,MAGA;UACA;QACA;MACA,CAPA;IAQA,CAjFA;IAkFAC,KAlFA,mBAkFA;MACA,gBACA,iBADA,EAEA,eAFA;IAGA,CAtFA;IAuFAC,MAvFA,oBAuFA;MACA;IACA,CAzFA;IA0FAC,UA1FA,wBA0FA;MACA;MACA;IACA;EA7FA;AAlBA","names":["name","components","Aside","Header","data","collapseBtnClass","isCollapse","sideWidth","created","methods","collapse","rowClass","loadPage","params","currentPage","pageSize","crop","beginDate","endDate","then","console","handleSizeChange","handleCurrentChange","handleAdd","save","handleEdit","row","del","id","handleSelectionChange","val","delBatch","reset","cancel","formCancel"],"sourceRoot":"src/views","sources":["Container.vue"],"sourcesContent":["<template>\n  <el-container style=\"min-height: 100vh\">\n    <el-aside :width=\"sideWidth + 'px'\" style=\"background-color: rgb(48, 65, 86); box-shadow: 2px 0 6px rgb(0 21 21 / 35%);\">\n      <Aside :isCollapse=\"isCollapse\" />\n    </el-aside>\n    \n    <el-container>\n      <el-header style=\"border-bottom: 1px solid #ccc; box-shadow: 0px 1px 3px #ccc; \">\n        <Header :collapseBtnClass=\"collapseBtnClass\" :collapse=\"collapse\" />\n      </el-header>\n      \n      <el-main>\n        <router-view></router-view>\n      </el-main>\n    </el-container>\n  </el-container>\n</template>\n\n<script>\n  import Aside from \"@/components/Aside\";\n  import Header from \"@/components/Header\";\n  export default {\n    name: 'Container',\n    components: {\n      Aside,\n      Header\n    },\n    data() {\n      return {\n        \n\n        collapseBtnClass:'el-icon-s-fold',\n        isCollapse: false,\n        sideWidth: 250\n      }\n    },\n    created() {\n      this.loadPage()\n    },\n    methods:{\n      collapse(){\n        this.isCollapse = !this.isCollapse\n        if(this.isCollapse){\n          this.sideWidth = 64\n          this.collapseBtnClass = 'el-icon-s-unfold'\n        }else{\n          this.sideWidth = 250\n          this.collapseBtnClass = 'el-icon-s-fold'\n        }\n      },\n      rowClass(){\n        return \"text-align:center\"\n      },\n      loadPage(){\n        this.request.get(\"/market-trend/page\", {\n          params:{\n            currentPage: this.currentPage,\n            pageSize: this.pageSize,\n            crop:this.crop,\n            beginDate:this.dateVal[0],\n            endDate:this.dateVal[1],\n          }\n        }).then(res => {\n            console.log(res)\n            console.log(this.dateVal)\n            this.tableData = res.records\n            this.total = res.total\n          })\n      },\n      handleSizeChange(pageSize){\n        this.pageSize = pageSize\n        this.loadPage()\n      },\n      handleCurrentChange(currentPage){\n        this.currentPage = currentPage\n        this.loadPage()\n      },\n      handleAdd(){\n        this.dialogFormVisible = true\n\n        this.form = {}\n      },\n      save(){\n        this.request.post(\"/market-trend\", this.form).then(res => {\n          if(res){\n            this.$message.success(\"Successfully saved\")\n            this.dialogFormVisible = false;\n            this.loadPage()\n          }else{\n             this.$message.error(\"Failed to save, please try again\")\n          }\n        })\n      },\n      handleEdit(row){\n        this.form = Object.assign({}, row) \n        this.dialogFormVisible = true\n      },\n      del(id){\n        this.request.delete(\"/market-trend/\" + id).then(res => {\n          if(res){\n            this.$message.success(\"Successfully deleted\")\n            this.loadPage()\n          }else{\n            this.$message.error(\"Failed to delete\")\n          }\n        })\n      },\n      handleSelectionChange(val){\n        this.multipleSelection = val\n      },\n      delBatch(){\n        let ids = this.multipleSelection.map(v => v.id)\n        this.request.post(\"/market-trend/batchDel\", ids).then(res => {\n          if(res){\n            this.$message.success(\"Successfully deleted\")\n            this.loadPage()\n          }else{\n            this.$message.error(\"Failed to delete\")\n          }\n        })\n      },\n      reset(){\n        this.crop = \"\",\n        this.dateVal= \"\",\n        this.loadPage()\n      },\n      cancel(){\n        this.$message.warning(\"Operation successfully canceled\")\n      },\n      formCancel(){\n        this.dialogFormVisible = false\n        this.$message.warning(\"Form submission canceled\")\n      },\n    }\n  }\n</script>\n"]},"metadata":{},"sourceType":"module"}