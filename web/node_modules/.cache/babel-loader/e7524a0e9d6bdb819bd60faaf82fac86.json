{"ast":null,"code":"import _regeneratorRuntime from \"E:/environment/project/agricultural-management-system/web/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"E:/environment/project/agricultural-management-system/web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"Person\",\n  data: function data() {\n    return {\n      form: {},\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {}\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.getUser().then(function (res) {\n      _this.form = res;\n    });\n  },\n  methods: {\n    getUser: function getUser() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this2.request.get(\"/user/userInfo\");\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent.data);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    save: function save() {\n      var _this3 = this;\n\n      this.request.post(\"/user\", this.form).then(function (res) {\n        if (res.code == 200) {\n          _this3.$message.success(\"Personal information modified successfully\"); // The method that triggers the parent to update the User\n\n\n          _this3.$emit(\"refreshUser\"); // Update the user information stored by the browser\n\n\n          _this3.getUser().then(function (res) {\n            res.token = JSON.parse(localStorage.getItem(\"token\"));\n            localStorage.setItem(\"user\", JSON.stringify(res));\n          });\n        } else {\n          _this3.$message.error(\"Information modification failed, please try again\");\n        }\n      });\n    },\n    handleAvatarSuccess: function handleAvatarSuccess(res) {\n      this.form.avatar = res.data;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;EACAA,cADA;EAEAC,IAFA,kBAEA;IACA;MACAC,QADA;MAEAC;IAFA;EAIA,CAPA;EAQAC,OARA,qBAQA;IAAA;;IACA;MACA;IACA,CAFA;EAGA,CAZA;EAaAC;IACAC,OADA,qBACA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA,oCADA;;cAAA;gBAAA,+CACAL,IADA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEA,CAHA;IAIAM,IAJA,kBAIA;MAAA;;MACA;QACA;UACA,sEADA,CAEA;;;UACA,4BAHA,CAKA;;;UACA;YACAC;YACAC;UACA,CAHA;QAIA,CAVA,MAUA;UACA;QACA;MACA,CAdA;IAeA,CApBA;IAqBAC,mBArBA,+BAqBAF,GArBA,EAqBA;MACA;IACA;EAvBA;AAbA","names":["name","data","form","user","created","methods","getUser","save","res","localStorage","handleAvatarSuccess"],"sourceRoot":"src/views","sources":["Person.vue"],"sourcesContent":["<template>\r\n  <el-card style=\"width: 500px;\">\r\n    <el-form label-width=\"80px\" size=\"small\">\r\n      <el-upload\r\n        class=\"avatar-uploader\"\r\n        action=\"http://localhost:9999/upload\"\r\n        :show-file-list=\"false\"\r\n        :on-success=\"handleAvatarSuccess\">\r\n        <img v-if=\"form.avatar\" :src=\"form.avatar\" class=\"avatar\">\r\n        <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n        <div slot=\"tip\" style=\"color: red;\" class=\"el-upload__tip\">Only accept jpg/png files, and no more than 4MB</div>\r\n      </el-upload>\r\n      <el-form-item label=\"username\">\r\n        <el-input v-model=\"form.username\" autocomplete=\"off\" disabled></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"nickname\">\r\n        <el-input v-model=\"form.nickname\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"email\">\r\n        <el-input v-model=\"form.email\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"sex\">\r\n        <el-radio v-model=\"form.sex\" label=\"0\">Male</el-radio>\r\n        <el-radio v-model=\"form.sex\" label=\"1\">Female</el-radio>\r\n        <el-radio v-model=\"form.sex\" label=\"2\">Unknown</el-radio>\r\n      </el-form-item>\r\n      <el-form-item label=\"phone\">\r\n        <el-input v-model=\"form.phonenumber\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"save\">Save</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name:\"Person\",\r\n    data() {\r\n      return {\r\n        form:{},\r\n        user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\r\n      }\r\n    },\r\n    created(){\r\n      this.getUser().then(res => {\r\n        this.form = res\r\n      })\r\n    },\r\n    methods:{\r\n      async getUser() {\r\n        return (await this.request.get(\"/user/userInfo\")).data\r\n      },\r\n      save(){\r\n        this.request.post(\"/user\", this.form).then(res => {\r\n          if(res.code == 200){\r\n            this.$message.success(\"Personal information modified successfully\")\r\n            // The method that triggers the parent to update the User\r\n            this.$emit(\"refreshUser\")\r\n\r\n            // Update the user information stored by the browser\r\n            this.getUser().then(res => {\r\n              res.token = JSON.parse(localStorage.getItem(\"token\"))\r\n              localStorage.setItem(\"user\", JSON.stringify(res))\r\n            })\r\n          }else{\r\n            this.$message.error(\"Information modification failed, please try again\")\r\n          }\r\n        })\r\n      },\r\n      handleAvatarSuccess(res){\r\n        this.form.avatar = res.data\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .avatar-uploader{\r\n    text-align: center;\r\n    padding-bottom: 10px;\r\n  }\r\n  .avatar-uploader .el-upload {\r\n    border: 1px dashed #d9d9d9;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n  .avatar-uploader .el-upload:hover {\r\n    border-color: #409EFF;\r\n  }\r\n  .avatar-uploader-icon {\r\n    font-size: 28px;\r\n    color: #8c939d;\r\n    width: 138px;\r\n    height: 138px;\r\n    line-height: 138px;\r\n    text-align: center;\r\n  }\r\n  .avatar {\r\n    width: 138px;\r\n    height: 138px;\r\n    display: block;\r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module"}