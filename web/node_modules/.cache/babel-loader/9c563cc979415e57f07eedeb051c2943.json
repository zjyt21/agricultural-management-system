{"ast":null,"code":"import _regeneratorRuntime from \"E:/environment/project/agricultural-management-system/web/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"E:/environment/project/agricultural-management-system/web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"Role\",\n  data: function data() {\n    return {\n      tableData: [],\n      total: 0,\n      pageNum: 1,\n      pageSize: 10,\n      name: \"\",\n      form: {},\n      dialogFormVisible: false,\n      menuDialogVis: false,\n      multipleSelection: [],\n      menuData: [],\n      props: {\n        label: 'name'\n      },\n      expends: [],\n      checks: [],\n      roleId: 0,\n      roleFlag: '',\n      ids: []\n    };\n  },\n  created: function created() {\n    this.load();\n  },\n  methods: {\n    load: function load() {\n      var _this = this;\n\n      this.request.get(\"/role/page\", {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name\n        }\n      }).then(function (res) {\n        _this.tableData = res.data.records;\n        _this.total = res.data.total;\n      });\n      this.request.get(\"/menu/ids\").then(function (r) {\n        _this.ids = r.data;\n      });\n    },\n    save: function save() {\n      var _this2 = this;\n\n      this.request.post(\"/role\", this.form).then(function (res) {\n        if (res.code === 200) {\n          _this2.$message.success(\"保存成功\");\n\n          _this2.dialogFormVisible = false;\n\n          _this2.load();\n        } else {\n          _this2.$message.error(\"保存失败\");\n        }\n      });\n    },\n    saveRoleMenu: function saveRoleMenu() {\n      var _this3 = this;\n\n      this.request.post(\"/role/roleMenu/\" + this.roleId, this.$refs.tree.getCheckedKeys()).then(function (res) {\n        if (res.code === 200) {\n          _this3.$message.success(\"绑定成功\");\n\n          _this3.menuDialogVis = false; // 操作管理员角色后需要重新登录\n\n          if (_this3.roleFlag === 'ROLE_ADMIN') {\n            _this3.$store.commit(\"logout\");\n          }\n        } else {\n          _this3.$message.error(res.msg);\n        }\n      });\n    },\n    handleAdd: function handleAdd() {\n      this.dialogFormVisible = true;\n      this.form = {};\n    },\n    handleEdit: function handleEdit(row) {\n      this.form = JSON.parse(JSON.stringify(row));\n      this.dialogFormVisible = true;\n    },\n    del: function del(id) {\n      var _this4 = this;\n\n      this.request.delete(\"/role/\" + id).then(function (res) {\n        if (res.code === 200) {\n          _this4.$message.success(\"删除成功\");\n\n          _this4.load();\n        } else {\n          _this4.$message.error(\"删除失败\");\n        }\n      });\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      console.log(val);\n      this.multipleSelection = val;\n    },\n    delBatch: function delBatch() {\n      var _this5 = this;\n\n      var ids = this.multipleSelection.map(function (v) {\n        return v.id;\n      }); // [{}, {}, {}] => [1,2,3]\n\n      this.request.post(\"/role/del/batch\", ids).then(function (res) {\n        if (res.code === 200) {\n          _this5.$message.success(\"批量删除成功\");\n\n          _this5.load();\n        } else {\n          _this5.$message.error(\"批量删除失败\");\n        }\n      });\n    },\n    reset: function reset() {\n      this.name = \"\";\n      this.load();\n    },\n    handleSizeChange: function handleSizeChange(pageSize) {\n      console.log(pageSize);\n      this.pageSize = pageSize;\n      this.load();\n    },\n    handleCurrentChange: function handleCurrentChange(pageNum) {\n      console.log(pageNum);\n      this.pageNum = pageNum;\n      this.load();\n    },\n    selectMenu: function selectMenu(role) {\n      var _this6 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this6.roleId = role.id;\n                _this6.roleFlag = role.flag; // 请求菜单数据\n\n                _this6.request.get(\"/menu\").then(function (res) {\n                  _this6.menuData = res.data; // 把后台返回的菜单数据处理成 id数组\n\n                  _this6.expends = _this6.menuData.map(function (v) {\n                    return v.id;\n                  });\n                });\n\n                _this6.request.get(\"/role/roleMenu/\" + _this6.roleId).then(function (res) {\n                  _this6.checks = res.data;\n\n                  _this6.ids.forEach(function (id) {\n                    if (!_this6.checks.includes(id)) {\n                      // 可能会报错：Uncaught (in promise) TypeError: Cannot read properties of undefined (reading 'setChecked')\n                      _this6.$nextTick(function () {\n                        _this6.$refs.tree.setChecked(id, false);\n                      });\n                    }\n                  });\n\n                  _this6.menuDialogVis = true;\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+GA;EACAA,YADA;EAEAC,IAFA,kBAEA;IACA;MACAC,aADA;MAEAC,QAFA;MAGAC,UAHA;MAIAC,YAJA;MAKAL,QALA;MAMAM,QANA;MAOAC,wBAPA;MAQAC,oBARA;MASAC,qBATA;MAUAC,YAVA;MAWAC;QACAC;MADA,CAXA;MAcAC,WAdA;MAeAC,UAfA;MAgBAC,SAhBA;MAiBAC,YAjBA;MAkBAC;IAlBA;EAoBA,CAvBA;EAwBAC,OAxBA,qBAwBA;IACA;EACA,CA1BA;EA2BAC;IACAC,IADA,kBACA;MAAA;;MACA;QACAC;UACAjB,qBADA;UAEAC,uBAFA;UAGAL;QAHA;MADA,GAMAsB,IANA,CAMA;QACA;QACA;MACA,CATA;MAWA;QACA;MACA,CAFA;IAIA,CAjBA;IAkBAC,IAlBA,kBAkBA;MAAA;;MACA;QACA;UACA;;UACA;;UACA;QACA,CAJA,MAIA;UACA;QACA;MACA,CARA;IASA,CA5BA;IA6BAC,YA7BA,0BA6BA;MAAA;;MACA;QACA;UACA;;UACA,6BAFA,CAIA;;UACA;YACA;UACA;QAEA,CATA,MASA;UACA;QACA;MACA,CAbA;IAcA,CA5CA;IA6CAC,SA7CA,uBA6CA;MACA;MACA;IACA,CAhDA;IAiDAC,UAjDA,sBAiDAC,GAjDA,EAiDA;MACA;MACA;IACA,CApDA;IAqDAC,GArDA,eAqDAC,EArDA,EAqDA;MAAA;;MACA;QACA;UACA;;UACA;QACA,CAHA,MAGA;UACA;QACA;MACA,CAPA;IAQA,CA9DA;IA+DAC,qBA/DA,iCA+DAC,GA/DA,EA+DA;MACAC;MACA;IACA,CAlEA;IAmEAC,QAnEA,sBAmEA;MAAA;;MACA;QAAA;MAAA,GADA,CACA;;MACA;QACA;UACA;;UACA;QACA,CAHA,MAGA;UACA;QACA;MACA,CAPA;IAQA,CA7EA;IA8EAC,KA9EA,mBA8EA;MACA;MACA;IACA,CAjFA;IAkFAC,gBAlFA,4BAkFA9B,QAlFA,EAkFA;MACA2B;MACA;MACA;IACA,CAtFA;IAuFAI,mBAvFA,+BAuFAhC,OAvFA,EAuFA;MACA4B;MACA;MACA;IACA,CA3FA;IA4FAK,UA5FA,sBA4FAC,IA5FA,EA4FA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBACA;gBACA,4BAFA,CAIA;;gBACA;kBACA,2BADA,CAGA;;kBACA;oBAAA;kBAAA;gBACA,CALA;;gBAOA;kBACA;;kBACA;oBACA;sBACA;sBACA;wBACA;sBACA,CAFA;oBAGA;kBACA,CAPA;;kBAQA;gBACA,CAXA;;cAZA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAwBA;EApHA;AA3BA","names":["name","data","tableData","total","pageNum","pageSize","form","dialogFormVisible","menuDialogVis","multipleSelection","menuData","props","label","expends","checks","roleId","roleFlag","ids","created","methods","load","params","then","save","saveRoleMenu","handleAdd","handleEdit","row","del","id","handleSelectionChange","val","console","delBatch","reset","handleSizeChange","handleCurrentChange","selectMenu","role"],"sourceRoot":"src/views","sources":["Role.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div style=\"margin: 10px 0\">\r\n      <el-input style=\"width: 200px\" placeholder=\"请输入名称\" suffix-icon=\"el-icon-search\" v-model=\"name\"></el-input>\r\n      <el-button class=\"ml-5\" type=\"primary\" @click=\"load\">搜索</el-button>\r\n      <el-button type=\"warning\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n\r\n    <div style=\"margin: 10px 0\">\r\n      <el-button type=\"primary\" @click=\"handleAdd\">新增 <i class=\"el-icon-circle-plus-outline\"></i></el-button>\r\n      <el-popconfirm\r\n          class=\"ml-5\"\r\n          confirm-button-text='确定'\r\n          cancel-button-text='我再想想'\r\n          icon=\"el-icon-info\"\r\n          icon-color=\"red\"\r\n          title=\"您确定批量删除这些数据吗？\"\r\n          @confirm=\"delBatch\"\r\n      >\r\n        <el-button type=\"danger\" slot=\"reference\">批量删除 <i class=\"el-icon-remove-outline\"></i></el-button>\r\n      </el-popconfirm>\r\n    </div>\r\n\r\n    <el-table :data=\"tableData\" border stripe :header-cell-class-name=\"'headerBg'\"  @selection-change=\"handleSelectionChange\">\r\n    <el-table \r\n      :data=\"tableData\" \r\n      :default-sort = \"{prop: 'date', order: 'descending'}\" \r\n      border \r\n      stripe \r\n      :header-cell-style=\"{ textAlign: 'center', background:'beige' }\" \r\n      :cell-style=\"rowClass\"\r\n      @selection-change=\"handleSelectionChange\">\r\n      <div slot=\"empty\" style=\"text-align: left;\">\r\n        <el-empty description=\"Sorry, there is no data you are looking for\" />\r\n      </div>\r\n      <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n      <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\r\n      <el-table-column prop=\"name\" label=\"名称\"></el-table-column>\r\n      <el-table-column prop=\"flag\" label=\"唯一标识\"></el-table-column>\r\n      <el-table-column prop=\"description\" label=\"描述\"></el-table-column>\r\n      <el-table-column label=\"操作\"  width=\"280\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"info\" @click=\"selectMenu(scope.row)\">分配菜单 <i class=\"el-icon-menu\"></i></el-button>\r\n          <el-button type=\"success\" @click=\"handleEdit(scope.row)\">编辑 <i class=\"el-icon-edit\"></i></el-button>\r\n          <el-popconfirm\r\n              class=\"ml-5\"\r\n              confirm-button-text='确定'\r\n              cancel-button-text='我再想想'\r\n              icon=\"el-icon-info\"\r\n              icon-color=\"red\"\r\n              title=\"您确定删除吗？\"\r\n              @confirm=\"del(scope.row.id)\"\r\n          >\r\n            <el-button type=\"danger\" slot=\"reference\">删除 <i class=\"el-icon-remove-outline\"></i></el-button>\r\n          </el-popconfirm>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <div style=\"padding: 10px 0\">\r\n      <el-pagination\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"pageNum\"\r\n          :page-sizes=\"[2, 5, 10, 20]\"\r\n          :page-size=\"pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\">\r\n      </el-pagination>\r\n    </div>\r\n\r\n    <el-dialog title=\"角色信息\" :visible.sync=\"dialogFormVisible\" width=\"30%\" >\r\n      <el-form label-width=\"80px\" size=\"small\">\r\n        <el-form-item label=\"名称\">\r\n          <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"唯一标识\">\r\n          <el-input v-model=\"form.flag\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\">\r\n          <el-input v-model=\"form.description\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"菜单分配\" :visible.sync=\"menuDialogVis\" width=\"30%\">\r\n      <el-tree\r\n          :props=\"props\"\r\n          :data=\"menuData\"\r\n          show-checkbox\r\n          node-key=\"id\"\r\n          ref=\"tree\"\r\n          :default-expanded-keys=\"expends\"\r\n          :default-checked-keys=\"checks\">\r\n         <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\r\n            <span><i :class=\"data.icon\"></i> {{ data.name }}</span>\r\n         </span>\r\n      </el-tree>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"menuDialogVis = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"saveRoleMenu\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: \"Role\",\r\n    data() {\r\n      return {\r\n        tableData: [],\r\n        total: 0,\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n        name: \"\",\r\n        form: {},\r\n        dialogFormVisible: false,\r\n        menuDialogVis: false,\r\n        multipleSelection: [],\r\n        menuData: [],\r\n        props: {\r\n          label: 'name',\r\n        },\r\n        expends: [],\r\n        checks: [],\r\n        roleId: 0,\r\n        roleFlag: '',\r\n        ids: []\r\n      }\r\n    },\r\n    created() {\r\n      this.load()\r\n    },\r\n    methods: {\r\n      load() {\r\n        this.request.get(\"/role/page\", {\r\n          params: {\r\n            pageNum: this.pageNum,\r\n            pageSize: this.pageSize,\r\n            name: this.name,\r\n          }\r\n        }).then(res => {\r\n          this.tableData = res.data.records\r\n          this.total = res.data.total\r\n        })\r\n\r\n        this.request.get(\"/menu/ids\").then(r => {\r\n          this.ids = r.data\r\n        })\r\n\r\n      },\r\n      save() {\r\n        this.request.post(\"/role\", this.form).then(res => {\r\n          if (res.code === 200) {\r\n            this.$message.success(\"保存成功\")\r\n            this.dialogFormVisible = false\r\n            this.load()\r\n          } else {\r\n            this.$message.error(\"保存失败\")\r\n          }\r\n        })\r\n      },\r\n      saveRoleMenu() {\r\n        this.request.post(\"/role/roleMenu/\" + this.roleId, this.$refs.tree.getCheckedKeys()).then(res => {\r\n          if (res.code === 200) {\r\n            this.$message.success(\"绑定成功\")\r\n            this.menuDialogVis = false\r\n\r\n            // 操作管理员角色后需要重新登录\r\n            if (this.roleFlag === 'ROLE_ADMIN') {\r\n              this.$store.commit(\"logout\")\r\n            }\r\n\r\n          } else {\r\n            this.$message.error(res.msg)\r\n          }\r\n        })\r\n      },\r\n      handleAdd() {\r\n        this.dialogFormVisible = true\r\n        this.form = {}\r\n      },\r\n      handleEdit(row) {\r\n        this.form = JSON.parse(JSON.stringify(row))\r\n        this.dialogFormVisible = true\r\n      },\r\n      del(id) {\r\n        this.request.delete(\"/role/\" + id).then(res => {\r\n          if (res.code === 200) {\r\n            this.$message.success(\"删除成功\")\r\n            this.load()\r\n          } else {\r\n            this.$message.error(\"删除失败\")\r\n          }\r\n        })\r\n      },\r\n      handleSelectionChange(val) {\r\n        console.log(val)\r\n        this.multipleSelection = val\r\n      },\r\n      delBatch() {\r\n        let ids = this.multipleSelection.map(v => v.id)  // [{}, {}, {}] => [1,2,3]\r\n        this.request.post(\"/role/del/batch\", ids).then(res => {\r\n          if (res.code === 200) {\r\n            this.$message.success(\"批量删除成功\")\r\n            this.load()\r\n          } else {\r\n            this.$message.error(\"批量删除失败\")\r\n          }\r\n        })\r\n      },\r\n      reset() {\r\n        this.name = \"\"\r\n        this.load()\r\n      },\r\n      handleSizeChange(pageSize) {\r\n        console.log(pageSize)\r\n        this.pageSize = pageSize\r\n        this.load()\r\n      },\r\n      handleCurrentChange(pageNum) {\r\n        console.log(pageNum)\r\n        this.pageNum = pageNum\r\n        this.load()\r\n      },\r\n      async selectMenu(role) {\r\n        this.roleId = role.id\r\n        this.roleFlag = role.flag\r\n\r\n        // 请求菜单数据\r\n        this.request.get(\"/menu\").then(res => {\r\n          this.menuData = res.data\r\n\r\n          // 把后台返回的菜单数据处理成 id数组\r\n          this.expends = this.menuData.map(v => v.id)\r\n        })\r\n\r\n        this.request.get(\"/role/roleMenu/\" + this.roleId).then(res => {\r\n          this.checks = res.data\r\n          this.ids.forEach(id => {\r\n            if (!this.checks.includes(id)) {\r\n              // 可能会报错：Uncaught (in promise) TypeError: Cannot read properties of undefined (reading 'setChecked')\r\n              this.$nextTick(() => {\r\n                this.$refs.tree.setChecked(id, false)\r\n              })\r\n            }\r\n          })\r\n          this.menuDialogVis = true\r\n        })\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n</style>"]},"metadata":{},"sourceType":"module"}