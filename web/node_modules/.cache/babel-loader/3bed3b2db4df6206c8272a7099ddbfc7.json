{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Aside from \"@/components/Aside\";\nimport Header from \"@/components/Header\";\nexport default {\n  name: 'Container',\n  components: {\n    Aside: Aside,\n    Header: Header\n  },\n  data: function data() {\n    return {\n      collapseBtnClass: 'el-icon-s-fold',\n      isCollapse: false,\n      sideWidth: 250,\n      user: {}\n    };\n  },\n  created: function created() {\n    // Get the latest User data from the background\n    this.getUser();\n  },\n  methods: {\n    collapse: function collapse() {\n      this.isCollapse = !this.isCollapse;\n\n      if (this.isCollapse) {\n        this.sideWidth = 64;\n        this.collapseBtnClass = 'el-icon-s-unfold';\n      } else {\n        this.sideWidth = 250;\n        this.collapseBtnClass = 'el-icon-s-fold';\n      }\n    },\n    getUser: function getUser() {\n      var _this = this;\n\n      var username = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")).username : \"\";\n\n      if (username) {\n        // Get User data from background\n        this.request.get(\"/user/username/\" + username).then(function (res) {\n          // Reassign the latest User data in the background\n          console.log(res);\n          _this.user = res.data;\n        });\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;EACAA,iBADA;EAEAC;IACAC,YADA;IAEAC;EAFA,CAFA;EAMAC,IANA,kBAMA;IACA;MACAC,kCADA;MAEAC,iBAFA;MAGAC,cAHA;MAIAC;IAJA;EAMA,CAbA;EAcAC,OAdA,qBAcA;IACA;IACA;EACA,CAjBA;EAkBAC;IACAC,QADA,sBACA;MACA;;MACA;QACA;QACA;MACA,CAHA,MAGA;QACA;QACA;MACA;IACA,CAVA;IAWAC,OAXA,qBAWA;MAAA;;MACA;;MACA;QACA;QACA;UACA;UACAC;UACA;QACA,CAJA;MAKA;IACA;EArBA;AAlBA","names":["name","components","Aside","Header","data","collapseBtnClass","isCollapse","sideWidth","user","created","methods","collapse","getUser","console"],"sourceRoot":"src/views","sources":["Container.vue"],"sourcesContent":["<template>\n  <el-container style=\"min-height: 100vh\">\n    <el-aside :width=\"sideWidth + 'px'\" style=\"background-color: rgb(48, 65, 86); box-shadow: 2px 0 6px rgb(0 21 21 / 35%);\">\n      <Aside :isCollapse=\"isCollapse\" />\n    </el-aside>\n    \n    <el-container>\n      <el-header style=\"border-bottom: 1px solid #ccc; box-shadow: 0px 1px 3px #ccc; \">\n        <Header :collapseBtnClass=\"collapseBtnClass\" :collapse=\"collapse\"  />\n      </el-header>\n      \n      <el-main>\n        <router-view @refreshUser=\"getUser\" />\n      </el-main>\n    </el-container>\n  </el-container>\n</template>\n\n<script>\n  import Aside from \"@/components/Aside\";\n  import Header from \"@/components/Header\";\n  export default {\n    name: 'Container',\n    components: {\n      Aside,\n      Header\n    },\n    data() {\n      return {\n        collapseBtnClass:'el-icon-s-fold',\n        isCollapse: false,\n        sideWidth: 250,\n        user: {},\n      }\n    },\n    created() {\n      // Get the latest User data from the background\n      this.getUser()\n    },\n    methods:{\n      collapse(){\n        this.isCollapse = !this.isCollapse\n        if(this.isCollapse){\n          this.sideWidth = 64\n          this.collapseBtnClass = 'el-icon-s-unfold'\n        }else{\n          this.sideWidth = 250\n          this.collapseBtnClass = 'el-icon-s-fold'\n        }\n      },\n      getUser() {\n        let username = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")).username : \"\"\n        if (username) {\n          // Get User data from background\n          this.request.get(\"/user/username/\" + username).then(res => {\n            // Reassign the latest User data in the background\n            console.log(res)\n            this.user = res.data\n          })\n        }\n      },\n    }\n  }\n</script>\n"]},"metadata":{},"sourceType":"module"}