{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as echarts from 'echarts';\nexport default {\n  name: 'Activity',\n  data: function data() {\n    return {\n      tableData: [],\n      total: 0,\n      currentPage: 1,\n      pageSize: 5,\n      crop: '',\n      type: '',\n      form: {},\n      multipleSelection: [],\n      dialogFormVisible: false,\n      rules: {\n        date: [{\n          required: true,\n          message: 'Please choose the date',\n          trigger: 'blur'\n        }],\n        crop: [{\n          required: true,\n          message: 'Please choose one crop',\n          trigger: 'blur'\n        }],\n        type: [{\n          required: true,\n          message: 'Please choose the activity',\n          trigger: 'blur'\n        }],\n        quantity: [{\n          required: true,\n          message: 'Please input the quantity',\n          trigger: 'blur'\n        }]\n      },\n      chartDateVal: [],\n      chartCrop: 'paddy',\n      sowing: 0,\n      watering: 0,\n      nitrogen: 0,\n      phosphate: 0,\n      harvest: 0,\n      dateVal: [],\n      pickerOptions: {\n        shortcuts: [{\n          text: 'within 7 days',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: 'within 30 days',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: 'within 90 days',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      }\n    };\n  },\n  watch: {\n    dateVal: function dateVal(val) {\n      if (val == null) this.dateVal = '';\n    },\n    chartDateVal: function chartDateVal(val) {\n      if (val == null) this.chartDateVal = '';\n    }\n  },\n  created: function created() {\n    this.loadPage();\n  },\n  mounted: function mounted() {\n    this.chartDateVal[0] = this.getFormatDate(2);\n    this.chartDateVal[1] = this.getFormatDate(0);\n    this.getActivityChart();\n  },\n  methods: {\n    getFormatDate: function getFormatDate(offset) {\n      var date = new Date();\n      var seperator1 = '-';\n      var year = date.getFullYear() - offset;\n      var month = date.getMonth() + 1;\n      var strDate = date.getDate();\n\n      if (month >= 1 && month <= 9) {\n        month = '0' + month;\n      }\n\n      if (strDate >= 0 && strDate <= 9) {\n        strDate = '0' + strDate;\n      }\n\n      var currentdate = year + seperator1 + month + seperator1 + strDate;\n      return currentdate;\n    },\n    rowClass: function rowClass() {\n      return \"text-align:center\";\n    },\n    loadPage: function loadPage() {\n      var _this = this;\n\n      this.request.get(\"/agri-activity/page\", {\n        params: {\n          currentPage: this.currentPage,\n          pageSize: this.pageSize,\n          crop: this.crop,\n          type: this.type,\n          beginDate: this.dateVal[0],\n          endDate: this.dateVal[1]\n        }\n      }).then(function (res) {\n        _this.tableData = res.data.records;\n        _this.total = res.data.total;\n        var maxPage = parseInt((_this.total - 1) / _this.pageSize + 1);\n\n        if (_this.currentPage > maxPage) {\n          _this.currentPage = maxPage;\n        }\n      });\n    },\n    handleSizeChange: function handleSizeChange(pageSize) {\n      this.pageSize = pageSize;\n      this.loadPage();\n    },\n    handleCurrentChange: function handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      this.loadPage();\n    },\n    handleAdd: function handleAdd() {\n      this.dialogFormVisible = true;\n      this.form = {};\n    },\n    save: function save() {\n      var _this2 = this;\n\n      this.$refs['activityForm'].validate(function (valid) {\n        if (valid) {\n          // Form validation is valid\n          _this2.request.post(\"/agri-activity\", _this2.form).then(function (res) {\n            if (res.code === 200) {\n              _this2.$message.success(\"Successfully saved\");\n\n              _this2.dialogFormVisible = false;\n\n              _this2.loadPage();\n            } else {\n              _this2.$message.error(\"Failed to save, please try again\");\n            }\n          });\n        } else {\n          _this2.$message.error(\"Failed to save, please check that your data meets the requirements\");\n        }\n      });\n    },\n    handleEdit: function handleEdit(row) {\n      this.form = Object.assign({}, row);\n      this.dialogFormVisible = true;\n    },\n    del: function del(id) {\n      var _this3 = this;\n\n      this.request.delete(\"/agri-activity/\" + id).then(function (res) {\n        if (res.code === 200) {\n          _this3.$message.success(\"Successfully deleted\");\n\n          _this3.loadPage();\n        } else {\n          _this3.$message.error(\"Failed to delete\");\n        }\n      });\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    delBatch: function delBatch() {\n      var _this4 = this;\n\n      var ids = this.multipleSelection.map(function (v) {\n        return v.id;\n      });\n      this.request.post(\"/agri-activity/batchDel\", ids).then(function (res) {\n        if (res.code === 200) {\n          _this4.$message.success(\"Successfully deleted\");\n\n          _this4.loadPage();\n        } else {\n          _this4.$message.error(\"Failed to delete\");\n        }\n      });\n    },\n    reset: function reset() {\n      this.crop = \"\", this.dateVal = \"\", this.currentPage = 1;\n      this.type = \"\", this.loadPage();\n    },\n    cancel: function cancel() {\n      this.$message.warning(\"Operation successfully canceled\");\n    },\n    formCancel: function formCancel() {\n      this.dialogFormVisible = false;\n      this.$message.warning(\"Form submission canceled\");\n    },\n    getActivityChart: function getActivityChart() {\n      var _this5 = this;\n\n      var activityChartDom = document.getElementById('activity');\n      var activityChart = echarts.init(activityChartDom);\n      var activityOption = {\n        title: {\n          text: 'Agriculture Behavior Records',\n          left: 'center',\n          textStyle: {\n            fontStyle: 'normal',\n            fontWeight: 'bold',\n            fontFamily: 'Arial',\n            fontSize: 25,\n            color: '#E44D26'\n          }\n        },\n        tooltip: {\n          trigger: 'item',\n          axisPointer: {\n            type: 'cross'\n          }\n        },\n        legend: {\n          orient: 'horizontal',\n          x: 'center',\n          y: 'bottom',\n          textStyle: {\n            fontSize: 12,\n            color: \"#eea849\"\n          }\n        },\n        grid: {\n          left: '5%',\n          right: '7%',\n          top: '15%',\n          bottom: '12%',\n          containLabel: true\n        },\n        toolbox: {\n          show: true,\n          //toolbox的配置项\n          feature: {\n            //辅助线的开关\n            mark: {\n              show: true\n            },\n            //动态类型切换\n            magicType: {\n              show: true,\n              //line为折线图，bar为柱状图\n              type: ['line', 'bar']\n            },\n            //将图标保存为图片\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        calculable: true,\n        xAxis: {\n          name: 'Date',\n          type: 'time',\n          //数值起始和结束两端空白策略\n          // boundaryGap: false,\n          axisLabel: {\n            show: true,\n            textStyle: {\n              color: 'green',\n              fontSize: '13',\n              fontWeight: 'bold'\n            }\n          },\n          axisLine: {\n            lineStyle: {\n              color: 'black',\n              width: 2\n            }\n          }\n        },\n        yAxis: {\n          name: 'Quantity (KG)',\n          type: 'value',\n          // splitLine: {\n          //     lineStyle: {\n          //       color: ['#eee']\n          //     }\n          // },\n          axisLabel: {\n            show: true,\n            textStyle: {\n              color: 'black',\n              fontSize: '15'\n            }\n          },\n          axisLine: {\n            lineStyle: {\n              color: 'black',\n              width: 2\n            }\n          }\n        },\n        series: [{\n          name: 'sowing',\n          data: [],\n          type: 'line'\n        }, {\n          name: 'watering',\n          data: [],\n          type: 'line'\n        }, {\n          name: 'nitrogen',\n          data: [],\n          type: 'line'\n        }, {\n          name: 'phosphate',\n          data: [],\n          type: 'line'\n        }, {\n          name: 'harvest',\n          data: [],\n          type: 'line'\n        }]\n      };\n      this.request.get(\"/agri-activity/chart\", {\n        params: {\n          crop: this.chartCrop,\n          beginDate: this.chartDateVal[0],\n          endDate: this.chartDateVal[1]\n        }\n      }).then(function (res) {\n        console.log(res);\n        activityOption.series[0].data = res.data[0].map(function (v) {\n          return [v.date, v.quantity];\n        });\n        activityOption.series[1].data = res.data[1].map(function (v) {\n          return [v.date, v.quantity];\n        });\n        activityOption.series[2].data = res.data[2].map(function (v) {\n          return [v.date, v.quantity];\n        });\n        activityOption.series[3].data = res.data[3].map(function (v) {\n          return [v.date, v.quantity];\n        });\n        activityOption.series[4].data = res.data[4].map(function (v) {\n          return [v.date, v.quantity];\n        });\n        _this5.watering = avg(res.data[1].map(function (v) {\n          return v.quantity;\n        }));\n        _this5.nitrogen = avg(res.data[2].map(function (v) {\n          return v.quantity;\n        }));\n        _this5.phosphate = avg(res.data[3].map(function (v) {\n          return v.quantity;\n        })); // this.watering = avg(res.data[0].map(v => v.quantity))\n\n        activityChart.setOption(activityOption);\n      });\n    },\n    avg: function avg(arr) {\n      var s = 0;\n\n      for (var i = arr.length - 1; i >= 0; i--) {\n        s += arr[i];\n      }\n\n      return s / arr.length;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["name","data","tableData","total","currentPage","pageSize","crop","type","form","multipleSelection","dialogFormVisible","rules","date","required","message","trigger","quantity","chartDateVal","chartCrop","sowing","watering","nitrogen","phosphate","harvest","dateVal","pickerOptions","shortcuts","text","onClick","picker","start","watch","val","created","mounted","methods","getFormatDate","offset","month","strDate","rowClass","loadPage","params","beginDate","endDate","then","handleSizeChange","handleCurrentChange","handleAdd","save","handleEdit","row","del","id","handleSelectionChange","delBatch","reset","cancel","formCancel","getActivityChart","title","left","textStyle","fontStyle","fontWeight","fontFamily","fontSize","color","tooltip","axisPointer","legend","orient","x","y","grid","right","top","bottom","containLabel","toolbox","show","feature","mark","magicType","saveAsImage","calculable","xAxis","axisLabel","axisLine","lineStyle","width","yAxis","series","console","activityOption","activityChart","avg","arr","s"],"sourceRoot":"src/views","sources":["Activity.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-row>\r\n      <el-col :span=\"3\">\r\n        <el-card>\r\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold;\"><i class=\"el-icon-task\"></i> Today's Task: </div>\r\n\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <el-card style=\"color: #409EFF; margin-left: 20px;\">\r\n          <div style=\"font-size: small;\"><i class=\"el-icon-user-solid\"></i> Sowing</div>\r\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold;\">\r\n            {{}}\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <el-card style=\"color: #F56C6C; margin-left: 20px;\">\r\n          <div style=\"font-size: small;\"><i class=\"el-icon-money\"></i>Watering</div>\r\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold;\">\r\n            {{watering}}\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <el-card style=\"color: #409EFF;margin-left: 20px;\">\r\n          <div style=\"font-size: small;\"><i class=\"el-icon-user-solid\"></i> Fertilization (nitrogen)</div>\r\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold;\">\r\n            {{nitrogen}}\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <el-card style=\"color: #F56C6C;margin-left: 20px;\">\r\n          <div style=\"font-size: small;\"><i class=\"el-icon-money\"></i>Fertilization (phosphate)</div>\r\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold;\">\r\n            {{phosphate}}\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <el-card style=\"color: #409EFF;margin-left: 20px;\">\r\n          <div style=\"font-size: small;\"><i class=\"el-icon-user-solid\"></i> Harvest</div>\r\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold;\">\r\n            {{}}\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <div style=\"height: 20px;\"></div>\r\n\r\n    <el-form :inline=\"true\" class=\"demo-form-inline\" style=\"text-align: center;\">\r\n      <el-form-item prop=\"chartCrop\">\r\n        <el-select filterable v-model=\"chartCrop\" placeholder=\"Please select a crop name\" default-first-option=\"paddy\">\r\n            <el-option label=\"paddy\" value=\"paddy\"></el-option>\r\n            <el-option label=\"potato\" value=\"potato\"></el-option>\r\n            <el-option label=\"soybean\" value=\"soybean\"></el-option>\r\n            <el-option label=\"peanut\" value=\"peanut\"></el-option>\r\n            <el-option label=\"wheat\" value=\"wheat\"></el-option>\r\n            <el-option label=\"barley\" value=\"barley\"></el-option>\r\n          </el-select>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-date-picker\r\n          v-model=\"chartDateVal\"\r\n          type=\"daterange\"\r\n          unlink-panels\r\n          range-separator=\"to\"\r\n          start-placeholder=\"Begin date\"\r\n          end-placeholder=\"End date\"\r\n          value-format=\"yyyy-MM-dd\">\r\n        </el-date-picker>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button class=\"ml-5\" type=\"primary\" @click=\"getActivityChart\" icon=\"el-icon-search\">Search</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <el-row :gutter=\"10\" style=\"margin-bottom: 40px;\">\r\n      \r\n      <el-col :span=\"24\" >\r\n        <el-card id=\"activity\" style=\"height: 500px;\" class=\"chart\"></el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-form :inline=\"true\" class=\"demo-form-inline\">\r\n      <el-form-item prop=\"crop\">\r\n        <el-select filterable v-model=\"crop\" placeholder=\"Please select a crop name\">\r\n            <el-option label=\"paddy\" value=\"paddy\"></el-option>\r\n            <el-option label=\"potato\" value=\"potato\"></el-option>\r\n            <el-option label=\"soybean\" value=\"soybean\"></el-option>\r\n            <el-option label=\"peanut\" value=\"peanut\"></el-option>\r\n            <el-option label=\"wheat\" value=\"wheat\"></el-option>\r\n            <el-option label=\"barley\" value=\"barley\"></el-option>\r\n          </el-select>\r\n      </el-form-item>\r\n      <el-form-item prop=\"type\">\r\n        <el-select filterable v-model=\"type\" placeholder=\"Please select the activity\">\r\n          <el-option label=\"watering\" value=\"watering\"></el-option>\r\n          <el-option label=\"fertilization (nitrogen)\" value=\"nitrogen\"></el-option>\r\n          <el-option label=\"fertilization (phosphate)\" value=\"phosphate\"></el-option>\r\n          <el-option label=\"sowing\" value=\"sowing\"></el-option>\r\n          <el-option label=\"harvest\" value=\"harvest\"></el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item prop=\"date\">\r\n        <el-date-picker\r\n          v-model=\"dateVal\"\r\n          type=\"daterange\"\r\n          unlink-panels\r\n          range-separator=\"to\"\r\n          start-placeholder=\"Begin date\"\r\n          end-placeholder=\"End date\"\r\n          :picker-options=\"pickerOptions\"\r\n          value-format=\"yyyy-MM-dd\">\r\n        </el-date-picker>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button class=\"ml-5\" type=\"primary\" @click=\"loadPage\" icon=\"el-icon-search\">Search</el-button>\r\n        <el-button class=\"ml-5\" type=\"warning\" @click=\"reset\" icon=\"el-icon-refresh\">Reset</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <div style=\"margin: 10px 0;\">\r\n      <el-button type=\"primary\" @click=\"handleAdd\">Add <i class=\"el-icon-circle-plus-outline\"></i></el-button>\r\n      <el-popconfirm\r\n        class=\"ml-5\"\r\n        confirm-button-text='DELETE'\r\n        cancel-button-text='CANCEL'\r\n        icon=\"el-icon-info\"\r\n        icon-color=\"red\"\r\n        title=\"Are you sure you want to delete these data?\"\r\n        @confirm=\"delBatch\"\r\n        @cancel=\"cancel\"\r\n      >\r\n      <el-button type=\"danger\" slot=\"reference\">Delete in bulk <i class=\"el-icon-remove-outline\"></i></el-button>\r\n      </el-popconfirm>\r\n    </div>\r\n\r\n    <el-table \r\n      :data=\"tableData\" \r\n      :default-sort = \"{prop: 'date', order: 'descending'}\" \r\n      border \r\n      stripe \r\n      :header-cell-style=\"{ textAlign: 'center', background:'beige' }\" \r\n      :cell-style=\"rowClass\"\r\n      @selection-change=\"handleSelectionChange\">\r\n      <div slot=\"empty\" style=\"text-align: left;\">\r\n        <el-empty description=\"Sorry, there is no data you are looking for\" />\r\n      </div>\r\n      <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n      <el-table-column prop=\"date\" label=\"Date\" sortable width=\"100\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"crop\" label=\"Crop\" width=\"150\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"type\" label=\"Specific Activity\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"quantity\" label=\"Quantity (in KG)\" sortable>\r\n      </el-table-column>\r\n      <!-- <el-table-column prop=\"operator\" label=\"Operator\" >\r\n      </el-table-column> -->\r\n      <el-table-column prop=\"option\" label=\"Operation\" width=\"200\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"success\" @click=\"handleEdit(scope.row)\">Edit <i class=\"el-icon-edit\"></i></el-button>\r\n          <el-popconfirm\r\n            class=\"ml-5\"\r\n            confirm-button-text='DELETE'\r\n            cancel-button-text='CANCEL'\r\n            icon=\"el-icon-info\"\r\n            icon-color=\"red\"\r\n            title=\"Are you sure to delete?\"\r\n            @confirm=\"del(scope.row.id)\"\r\n            @cancel=\"cancel\"\r\n          >\r\n          <el-button type=\"danger\" slot=\"reference\">Delete <i class=\"el-icon-remove-outline\"></i></el-button>\r\n          </el-popconfirm>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <div style=\"padding: 10px 0;\">\r\n      <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"currentPage\"\r\n        :page-sizes=\"[5, 10, 20, this.total]\"\r\n        :page-size=pageSize\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\">\r\n      </el-pagination>\r\n    </div>\r\n\r\n    <el-dialog title=\"Activities Records\" :visible.sync=\"dialogFormVisible\" width=\"30%\" center>\r\n      <el-form label-width=\"auto\" size=\"small\" :model=\"form\" :rules=\"rules\" ref=\"activityForm\">\r\n        <el-form-item label=\"Date\" prop=\"date\">\r\n          <el-col :span=\"11\">\r\n            <el-date-picker type=\"date\" placeholder=\"select date\" v-model=\"form.date\" style=\"width: 100%;\" value-format=\"yyyy-MM-dd\"></el-date-picker>\r\n          </el-col>\r\n        </el-form-item>\r\n        <el-form-item label=\"Crop\" prop=\"crop\">\r\n          <el-select filterable v-model=\"form.crop\" placeholder=\"Please select a crop name\">\r\n            <el-option label=\"paddy\" value=\"paddy\"></el-option>\r\n            <el-option label=\"potato\" value=\"potato\"></el-option>\r\n            <el-option label=\"soybean\" value=\"soybean\"></el-option>\r\n            <el-option label=\"peanut\" value=\"peanut\"></el-option>\r\n            <el-option label=\"wheat\" value=\"wheat\"></el-option>\r\n            <el-option label=\"barley\" value=\"barley\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"Activity\" prop=\"type\">\r\n          <el-select filterable v-model=\"form.type\" placeholder=\"Please select the specific activity\">\r\n            <el-option label=\"watering\" value=\"watering\"></el-option>\r\n            <el-option label=\"fertilization (nitrogen)\" value=\"nitrogen\"></el-option>\r\n            <el-option label=\"fertilization (phosphate)\" value=\"phosphate\"></el-option>\r\n            <el-option label=\"sowing\" value=\"sowing\"></el-option>\r\n            <el-option label=\"harvest\" value=\"harvest\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"Quantity\" prop=\"quantity\">\r\n          <el-input \r\n            type=\"number\" \r\n            v-model.number=\"form.quantity\" \r\n            autocomplete=\"off\" \r\n            placeholder=\"(KG)\"\r\n            onKeypress=\"return (/[\\d]/.test(String.fromCharCode(event.keyCode)))\">\r\n          </el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"formCancel\">Cancel</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">Confirm</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'; \r\nexport default {\r\n  name:'Activity',\r\n  data() {\r\n    return {\r\n      tableData: [],\r\n      total:0,\r\n      currentPage:1,\r\n      pageSize:5,\r\n      crop:'',\r\n      type:'',\r\n      form:{},\r\n      multipleSelection: [],\r\n      dialogFormVisible: false,\r\n\r\n      rules: {\r\n        date: [ {required: true, message: 'Please choose the date', trigger: 'blur'},],\r\n        crop: [{required: true, message: 'Please choose one crop', trigger: 'blur'},],\r\n        type: [{required: true, message: 'Please choose the activity', trigger: 'blur'},],\r\n        quantity: [{required: true, message: 'Please input the quantity', trigger: 'blur'},],\r\n      },\r\n\r\n      chartDateVal:[],\r\n      chartCrop:'paddy',\r\n\r\n      sowing:0,\r\n      watering:0,\r\n      nitrogen:0,\r\n      phosphate:0,\r\n      harvest:0,\r\n\r\n      dateVal:[],\r\n      pickerOptions: {\r\n        shortcuts: [{\r\n          text: 'within 7 days',\r\n          onClick(picker) {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n            picker.$emit('pick', [start, end]);\r\n          }\r\n        }, {\r\n          text: 'within 30 days',\r\n          onClick(picker) {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n            picker.$emit('pick', [start, end]);\r\n          }\r\n        }, {\r\n          text: 'within 90 days',\r\n          onClick(picker) {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n            picker.$emit('pick', [start, end]);\r\n          }\r\n        }]\r\n      },\r\n    }\r\n  },\r\n  watch:{\r\n    dateVal(val){\r\n      if(val == null) this.dateVal = ''\r\n    },\r\n    chartDateVal(val){\r\n      if(val == null) this.chartDateVal = ''\r\n    }\r\n  },\r\n  created() {\r\n    this.loadPage()\r\n  },\r\n  mounted() {\r\n    this.chartDateVal[0] = this.getFormatDate(2)\r\n    this.chartDateVal[1] = this.getFormatDate(0)\r\n    this.getActivityChart()\r\n  },\r\n  methods: {\r\n    getFormatDate(offset) {\r\n        var date = new Date()\r\n        var seperator1 = '-'\r\n        var year = date.getFullYear() - offset\r\n        var month = date.getMonth() + 1\r\n        var strDate = date.getDate()\r\n        if (month >= 1 && month <= 9) {\r\n          month = '0' + month\r\n        }\r\n        if (strDate >= 0 && strDate <= 9) {\r\n          strDate = '0' + strDate\r\n        }\r\n        var currentdate = year + seperator1 + month + seperator1 + strDate\r\n        return currentdate\r\n    },\r\n    rowClass(){\r\n      return \"text-align:center\"\r\n    },\r\n    loadPage(){\r\n      this.request.get(\"/agri-activity/page\", {\r\n        params:{\r\n          currentPage: this.currentPage,\r\n          pageSize: this.pageSize,\r\n          crop:this.crop,\r\n          type:this.type,\r\n          beginDate:this.dateVal[0],\r\n          endDate:this.dateVal[1],\r\n        }\r\n      }).then(res => {\r\n          this.tableData = res.data.records\r\n          this.total = res.data.total\r\n          let maxPage = parseInt((this.total - 1) / this.pageSize + 1);\r\n          if(this.currentPage > maxPage){\r\n            this.currentPage = maxPage\r\n          }\r\n        })\r\n    },\r\n    handleSizeChange(pageSize){\r\n      this.pageSize = pageSize\r\n      this.loadPage()\r\n    },\r\n    handleCurrentChange(currentPage){\r\n      this.currentPage = currentPage\r\n      this.loadPage()\r\n    },\r\n    handleAdd(){\r\n      this.dialogFormVisible = true\r\n\r\n      this.form = {}\r\n    },\r\n    save(){\r\n      this.$refs['activityForm'].validate((valid) => {\r\n          if (valid) {  // Form validation is valid\r\n            this.request.post(\"/agri-activity\", this.form).then(res => {\r\n              if(res.code === 200){\r\n                this.$message.success(\"Successfully saved\")\r\n                this.dialogFormVisible = false;\r\n                this.loadPage()\r\n              }else{\r\n                this.$message.error(\"Failed to save, please try again\")\r\n              }\r\n            })\r\n          }else{\r\n            this.$message.error(\"Failed to save, please check that your data meets the requirements\")\r\n          }\r\n      });\r\n    },\r\n    handleEdit(row){\r\n      this.form = Object.assign({}, row) \r\n      this.dialogFormVisible = true\r\n    },\r\n    del(id){\r\n      this.request.delete(\"/agri-activity/\" + id).then(res => {\r\n        if(res.code === 200){\r\n          this.$message.success(\"Successfully deleted\")\r\n          this.loadPage()\r\n        }else{\r\n          this.$message.error(\"Failed to delete\")\r\n        }\r\n      })\r\n    },\r\n    handleSelectionChange(val){\r\n      this.multipleSelection = val\r\n    },\r\n    delBatch(){\r\n      let ids = this.multipleSelection.map(v => v.id)\r\n      this.request.post(\"/agri-activity/batchDel\", ids).then(res => {\r\n        if(res.code === 200){\r\n          this.$message.success(\"Successfully deleted\")\r\n          this.loadPage()\r\n        }else{\r\n          this.$message.error(\"Failed to delete\")\r\n        }\r\n      })\r\n    },\r\n    reset(){\r\n      this.crop = \"\",\r\n      this.dateVal= \"\",\r\n      this.currentPage = 1;\r\n      this.type = \"\",\r\n      this.loadPage()\r\n    },\r\n    cancel(){\r\n      this.$message.warning(\"Operation successfully canceled\")\r\n    },\r\n    formCancel(){\r\n      this.dialogFormVisible = false\r\n      this.$message.warning(\"Form submission canceled\")\r\n    },\r\n    getActivityChart() {\r\n      var activityChartDom = document.getElementById('activity');\r\n      var activityChart = echarts.init(activityChartDom);\r\n\r\n      var activityOption = {\r\n        title: {\r\n          text: 'Agriculture Behavior Records',\r\n          left: 'center',\r\n          textStyle:{\r\n            fontStyle:'normal',\r\n            fontWeight:'bold',\r\n            fontFamily:'Arial',\r\n            fontSize:25,\r\n            color:'#E44D26'\r\n          }\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          axisPointer: {\r\n            type: 'cross'\r\n          }\r\n        },\r\n        legend: {\r\n          orient: 'horizontal',\r\n          x: 'center',\r\n          y: 'bottom',\r\n          textStyle: {\r\n            fontSize: 12,\r\n            color: \"#eea849\",\r\n          },\r\n        },\r\n        grid: {\r\n          left: '5%',\r\n          right: '7%',\r\n          top:'15%',\r\n          bottom: '12%',\r\n          containLabel: true\r\n        },\r\n        toolbox: {\r\n            show: true,\r\n            //toolbox的配置项\r\n            feature: {\r\n                //辅助线的开关\r\n                mark: { show: true },\r\n                //动态类型切换\r\n                magicType: {\r\n                    show: true,\r\n                    //line为折线图，bar为柱状图\r\n                    type: ['line', 'bar']\r\n                },\r\n                //将图标保存为图片\r\n                saveAsImage: { show: true }\r\n            }\r\n        },\r\n        calculable: true,\r\n        xAxis: {\r\n          name: 'Date',\r\n          type: 'time',\r\n          \r\n          //数值起始和结束两端空白策略\r\n          // boundaryGap: false,\r\n          axisLabel: {        \r\n              show: true,\r\n              textStyle: {\r\n                  color: 'green',\r\n                  fontSize:'13',\r\n                  fontWeight:'bold'\r\n              }\r\n          },\r\n          axisLine:{\r\n            lineStyle:{\r\n              color:'black',\r\n              width:2,\r\n            }\r\n          },\r\n        },\r\n        yAxis: {\r\n          name: 'Quantity (KG)',\r\n          type: 'value',  \r\n          // splitLine: {\r\n          //     lineStyle: {\r\n          //       color: ['#eee']\r\n          //     }\r\n          // },\r\n          axisLabel: {        \r\n            show: true,\r\n            textStyle: {\r\n                color: 'black',\r\n                fontSize:'15',\r\n            }\r\n          },\r\n          axisLine:{\r\n            lineStyle:{\r\n              color:'black',\r\n              width:2,\r\n            }\r\n          }      \r\n        },\r\n        series: [\r\n          { name: 'sowing', data: [], type: 'line'},\r\n          { name: 'watering', data: [], type: 'line'},\r\n          { name: 'nitrogen', data: [], type: 'line'},\r\n          { name: 'phosphate', data: [], type: 'line'},\r\n          { name: 'harvest', data: [], type: 'line'},\r\n        ]\r\n      };\r\n\r\n      this.request.get(\"/agri-activity/chart\", {\r\n          params:{\r\n            crop:this.chartCrop,\r\n            beginDate: this.chartDateVal[0],\r\n            endDate: this.chartDateVal[1],\r\n          }\r\n      }).then(res => {\r\n        console.log(res)\r\n        activityOption.series[0].data = res.data[0].map(v => [v.date, v.quantity])\r\n        activityOption.series[1].data = res.data[1].map(v => [v.date, v.quantity])\r\n        activityOption.series[2].data = res.data[2].map(v => [v.date, v.quantity])\r\n        activityOption.series[3].data = res.data[3].map(v => [v.date, v.quantity])\r\n        activityOption.series[4].data = res.data[4].map(v => [v.date, v.quantity])\r\n\r\n        this.watering = avg(res.data[1].map(v => v.quantity))\r\n        this.nitrogen = avg(res.data[2].map(v => v.quantity))\r\n        this.phosphate = avg(res.data[3].map(v => v.quantity))\r\n        // this.watering = avg(res.data[0].map(v => v.quantity))\r\n\r\n        activityChart.setOption(activityOption);\r\n      })\r\n      \r\n    },\r\n    avg(arr) {\r\n      var s = 0;\r\n      for (var i = arr.length - 1; i >= 0; i--) {\r\n        s += arr[i];\r\n      }\r\n      return s / arr.length;\r\n    },\r\n  },\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  .chart {\r\n    background-image: linear-gradient(to top, #093028 0%, #2C7744 100%);\r\n    overflow: hidden;\r\n  };\r\n</style>"]},"metadata":{},"sourceType":"module"}