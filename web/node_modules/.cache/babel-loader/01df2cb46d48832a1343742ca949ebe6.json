{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as echarts from 'echarts';\nimport VueWeather from \"vue-weather-widget\";\nexport default {\n  name: \"Home\",\n  components: {\n    VueWeather: VueWeather\n  },\n  data: function data() {\n    return {\n      icons: {},\n      features: [],\n      center: {\n        lat: 53.382349,\n        lng: -1.481200\n      },\n      map: null,\n      contentString: '',\n      infowindow: {},\n      marker: {},\n      scoreChartDom: {},\n      scoreChart: {},\n      scoreOption: {}\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    setTimeout(function () {\n      _this.initMap();\n    }, 0);\n    this.getScoreChart();\n  },\n  methods: {\n    initMap: function initMap() {\n      var _this2 = this;\n\n      this.icons = {\n        farm: {\n          icon: \"http://rf6jnyisc.bkt.clouddn.com/2022/08/0578e7e2322fd44c289a4ba09823306018.png\"\n        }\n      };\n      this.features = [{\n        position: new google.maps.LatLng(53.382349, -1.481200),\n        type: \"farm\"\n      }];\n      this.map = new google.maps.Map(document.getElementById(\"map\"), {\n        zoom: 18,\n        center: this.center\n      });\n      this.contentString = '<div id=\"content\">' + '<div id=\"siteNotice\">' + \"</div>\" + '<h1 id=\"firstHeading\" class=\"firstHeading\">JLGL Farm</h1>' + '<div id=\"bodyContent\">' + \"<p><b>Welcome to JLGL Farm, we are located in Sheffield, UK, glad you could come and visit </b><br>\" + \"<b>Our Position: </b> S14NP, right next to diamond</p>\" + \"</div>\" + \"</div>\";\n      this.infowindow = new google.maps.InfoWindow({\n        content: this.contentString\n      });\n      this.marker = new google.maps.Marker({\n        position: this.features[0].position,\n        icon: this.icons[this.features[0].type].icon,\n        map: this.map\n      });\n      this.marker.addListener(\"click\", function () {\n        _this2.infowindow.open({\n          anchor: _this2.marker,\n          map: _this2.map,\n          shouldFocus: false\n        });\n      });\n    },\n    getScoreChart: function getScoreChart() {\n      this.scoreChartDom = document.getElementById('score');\n      this.scoreChart = echarts.init(this.scoreChartDom);\n      this.scoreOption = {\n        title: {\n          text: 'Soil Condition Score Record',\n          left: 'center',\n          textStyle: {\n            fontStyle: 'normal',\n            fontWeight: 'bold',\n            fontFamily: 'Arial',\n            fontSize: 25\n          }\n        },\n        tooltip: {\n          trigger: 'item',\n          axisPointer: {\n            type: 'cross'\n          }\n        },\n        legend: {\n          orient: 'horizontal',\n          x: 'center',\n          y: 'bottom'\n        },\n        grid: {\n          left: '5%',\n          right: '7%',\n          top: '15%',\n          bottom: '12%',\n          containLabel: true\n        },\n        toolbox: {\n          show: true,\n          //toolbox的配置项\n          feature: {\n            //辅助线的开关\n            mark: {\n              show: true\n            },\n            //动态类型切换\n            magicType: {\n              show: true,\n              //line为折线图，bar为柱状图\n              type: ['line', 'bar']\n            },\n            //将图标保存为图片\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        calculable: true,\n        xAxis: {\n          name: 'Date',\n          type: 'time',\n          //数值起始和结束两端空白策略\n          // boundaryGap: false,\n          axisLabel: {\n            show: true,\n            textStyle: {\n              color: 'green',\n              fontSize: '13',\n              fontWeight: 'bold'\n            }\n          },\n          axisLine: {\n            lineStyle: {\n              color: 'black',\n              width: 2\n            }\n          }\n        },\n        yAxis: {\n          name: 'Score',\n          type: 'value',\n          axisLabel: {\n            show: true,\n            textStyle: {\n              color: 'black',\n              fontSize: '10'\n            }\n          },\n          axisLine: {\n            lineStyle: {\n              color: 'black',\n              width: 2\n            }\n          }\n        },\n        series: [{\n          type: 'gauge',\n          startAngle: 180,\n          endAngle: 0,\n          min: 0,\n          max: 1,\n          splitNumber: 8,\n          axisLine: {\n            lineStyle: {\n              width: 6,\n              color: [[0.25, '#FF6E76'], [0.5, '#FDDD60'], [0.75, '#58D9F9'], [1, '#7CFFB2']]\n            }\n          },\n          pointer: {\n            icon: 'path://M12.8,0.7l12,40.1H0.7L12.8,0.7z',\n            length: '12%',\n            width: 20,\n            offsetCenter: [0, '-60%'],\n            itemStyle: {\n              color: 'auto'\n            }\n          },\n          axisTick: {\n            length: 12,\n            lineStyle: {\n              color: 'auto',\n              width: 2\n            }\n          },\n          splitLine: {\n            length: 20,\n            lineStyle: {\n              color: 'auto',\n              width: 5\n            }\n          },\n          axisLabel: {\n            color: '#464646',\n            fontSize: 20,\n            distance: -60,\n            formatter: function formatter(value) {\n              if (value === 0.875) {\n                return 'A';\n              } else if (value === 0.625) {\n                return 'B';\n              } else if (value === 0.375) {\n                return 'C';\n              } else if (value === 0.125) {\n                return 'D';\n              }\n\n              return '';\n            }\n          },\n          title: {\n            offsetCenter: [0, '-20%'],\n            fontSize: 30\n          },\n          detail: {\n            fontSize: 50,\n            offsetCenter: [0, '0%'],\n            valueAnimation: true,\n            formatter: function formatter(value) {\n              return Math.round(value * 100) + '分';\n            },\n            color: 'auto'\n          },\n          data: [{\n            value: 0.7,\n            name: 'Grade Rating'\n          }]\n        }]\n      }; //\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["name","components","VueWeather","data","icons","features","center","lat","lng","map","contentString","infowindow","marker","scoreChartDom","scoreChart","scoreOption","mounted","setTimeout","methods","initMap","farm","icon","position","type","zoom","content","anchor","shouldFocus","getScoreChart","title","text","left","textStyle","fontStyle","fontWeight","fontFamily","fontSize","tooltip","trigger","axisPointer","legend","orient","x","y","grid","right","top","bottom","containLabel","toolbox","show","feature","mark","magicType","saveAsImage","calculable","xAxis","axisLabel","color","axisLine","lineStyle","width","yAxis","series","startAngle","endAngle","min","max","splitNumber","pointer","length","offsetCenter","itemStyle","axisTick","splitLine","distance","formatter","detail","valueAnimation","value"],"sourceRoot":"src/views","sources":["Home.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div style=\"font-size: 8px; color: red; margin-bottom: 10px;\">If you are a Chinese user, please use a VPN to view</div>\r\n    <el-row>\r\n      <el-col :span=\"14\">\r\n        <el-card style=\"width: 100%;\">\r\n          <vue-weather\r\n            api-key=\"e726bc58550e9da951ceede76403afa7\"\r\n            units=\"uk\"\r\n            latitude=\"53.382349\"\r\n            longitude=\"-1.481200\"\r\n          />\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"9\" style=\"margin-left: 20px;\">\r\n        <el-card>\r\n          {{$store.state.curScore}}\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n      \r\n    <div id=\"map\" style=\"width: 100%; height: 500px; margin-top: 15px;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from 'echarts'; \r\n  import VueWeather from \"vue-weather-widget\";\r\n  export default {\r\n    name: \"Home\",\r\n    components: {\r\n      VueWeather,\r\n    },\r\n    data() {\r\n      return {\r\n        icons:{},\r\n        features:[],\r\n        center: { lat: 53.382349, lng: -1.481200 },\r\n        map:null,\r\n        contentString:'',\r\n        infowindow:{},\r\n        marker:{},\r\n\r\n        scoreChartDom:{},\r\n        scoreChart:{},\r\n        scoreOption:{},\r\n      };\r\n    },\r\n \r\n    mounted(){\r\n      setTimeout(() => {\r\n        this.initMap();\r\n      }, 0)\r\n      this.getScoreChart()\r\n    },\r\n  \r\n    methods: {\r\n      initMap() {\r\n        this.icons = {\r\n          farm: {\r\n            icon: \"http://rf6jnyisc.bkt.clouddn.com/2022/08/0578e7e2322fd44c289a4ba09823306018.png\",\r\n          },\r\n        };\r\n        this.features = [\r\n          {\r\n            position: new google.maps.LatLng(53.382349, -1.481200),\r\n            type: \"farm\",\r\n          }\r\n        ];\r\n        this.map = new google.maps.Map(document.getElementById(\"map\"), {\r\n          zoom: 18,\r\n          center: this.center,\r\n        });\r\n\r\n        this.contentString =\r\n          '<div id=\"content\">' +\r\n          '<div id=\"siteNotice\">' +\r\n          \"</div>\" +\r\n          '<h1 id=\"firstHeading\" class=\"firstHeading\">JLGL Farm</h1>' +\r\n          '<div id=\"bodyContent\">' +\r\n          \"<p><b>Welcome to JLGL Farm, we are located in Sheffield, UK, glad you could come and visit </b><br>\" +\r\n          \"<b>Our Position: </b> S14NP, right next to diamond</p>\" + \r\n          \"</div>\" +\r\n          \"</div>\";\r\n          \r\n        this.infowindow = new google.maps.InfoWindow({\r\n          content: this.contentString,\r\n        });\r\n        this.marker = new google.maps.Marker({\r\n          position: this.features[0].position,\r\n          icon: this.icons[this.features[0].type].icon,\r\n          map: this.map,\r\n        });\r\n        \r\n        this.marker.addListener(\"click\", () => {\r\n          this.infowindow.open({\r\n            anchor: this.marker,\r\n            map:this.map,\r\n            shouldFocus: false,\r\n          });\r\n        });\r\n      },\r\n      getScoreChart(){\r\n        this.scoreChartDom = document.getElementById('score');\r\n        this.scoreChart = echarts.init(this.scoreChartDom);\r\n\r\n        this.scoreOption = {\r\n          title: {\r\n            text: 'Soil Condition Score Record',\r\n            left: 'center',\r\n            textStyle:{\r\n              fontStyle:'normal',\r\n              fontWeight:'bold',\r\n              fontFamily:'Arial',\r\n              fontSize:25\r\n            }\r\n          },\r\n          tooltip: {\r\n            trigger: 'item',\r\n            axisPointer: {\r\n              type: 'cross'\r\n            }\r\n          },\r\n          legend: {\r\n            orient: 'horizontal',\r\n            x: 'center',\r\n            y: 'bottom'\r\n          },\r\n          grid: {\r\n            left: '5%',\r\n            right: '7%',\r\n            top:'15%',\r\n            bottom: '12%',\r\n            containLabel: true\r\n          },\r\n          toolbox: {\r\n              show: true,\r\n              //toolbox的配置项\r\n              feature: {\r\n                  //辅助线的开关\r\n                  mark: { show: true },\r\n                  //动态类型切换\r\n                  magicType: {\r\n                      show: true,\r\n                      //line为折线图，bar为柱状图\r\n                      type: ['line', 'bar']\r\n                  },\r\n                  //将图标保存为图片\r\n                  saveAsImage: { show: true }\r\n              }\r\n          },\r\n          calculable: true,\r\n          xAxis: {\r\n            name: 'Date',\r\n            type: 'time',\r\n            \r\n            //数值起始和结束两端空白策略\r\n            // boundaryGap: false,\r\n            axisLabel: {        \r\n                show: true,\r\n                textStyle: {\r\n                    color: 'green',\r\n                    fontSize:'13',\r\n                    fontWeight:'bold'\r\n                }\r\n            },\r\n            axisLine:{\r\n              lineStyle:{\r\n                color:'black',\r\n                width:2,\r\n              }\r\n            },\r\n          },\r\n          yAxis: {\r\n            name: 'Score',\r\n            type: 'value',\r\n            axisLabel: {        \r\n                show: true,\r\n                textStyle: {\r\n                    color: 'black',\r\n                    fontSize:'10',\r\n                }\r\n            },\r\n            axisLine:{\r\n              lineStyle:{\r\n                color:'black',\r\n                width:2,\r\n              }\r\n            }      \r\n          },\r\n          series: [\r\n            {\r\n              type: 'gauge',\r\n              startAngle: 180,\r\n              endAngle: 0,\r\n              min: 0,\r\n              max: 1,\r\n              splitNumber: 8,\r\n              axisLine: {\r\n                lineStyle: {\r\n                  width: 6,\r\n                  color: [\r\n                    [0.25, '#FF6E76'],\r\n                    [0.5, '#FDDD60'],\r\n                    [0.75, '#58D9F9'],\r\n                    [1, '#7CFFB2']\r\n                  ]\r\n                }\r\n              },\r\n              pointer: {\r\n                icon: 'path://M12.8,0.7l12,40.1H0.7L12.8,0.7z',\r\n                length: '12%',\r\n                width: 20,\r\n                offsetCenter: [0, '-60%'],\r\n                itemStyle: {\r\n                  color: 'auto'\r\n                }\r\n              },\r\n              axisTick: {\r\n                length: 12,\r\n                lineStyle: {\r\n                  color: 'auto',\r\n                  width: 2\r\n                }\r\n              },\r\n              splitLine: {\r\n                length: 20,\r\n                lineStyle: {\r\n                  color: 'auto',\r\n                  width: 5\r\n                }\r\n              },\r\n              axisLabel: {\r\n                color: '#464646',\r\n                fontSize: 20,\r\n                distance: -60,\r\n                formatter: function (value) {\r\n                  if (value === 0.875) {\r\n                    return 'A';\r\n                  } else if (value === 0.625) {\r\n                    return 'B';\r\n                  } else if (value === 0.375) {\r\n                    return 'C';\r\n                  } else if (value === 0.125) {\r\n                    return 'D';\r\n                  }\r\n                  return '';\r\n                }\r\n              },\r\n              title: {\r\n                offsetCenter: [0, '-20%'],\r\n                fontSize: 30\r\n              },\r\n              detail: {\r\n                fontSize: 50,\r\n                offsetCenter: [0, '0%'],\r\n                valueAnimation: true,\r\n                formatter: function (value) {\r\n                  return Math.round(value * 100) + '分';\r\n                },\r\n                color: 'auto'\r\n              },\r\n              data: [\r\n                {\r\n                  value: 0.7,\r\n                  name: 'Grade Rating'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        };//\r\n      }\r\n    },\r\n  }\r\n  \r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}