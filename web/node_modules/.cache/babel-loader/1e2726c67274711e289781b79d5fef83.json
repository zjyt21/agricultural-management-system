{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"Header\",\n  data: function data() {\n    return {\n      form: {},\n      dialogFormVisible: false,\n      // user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\n      rules: {\n        password: [{\n          required: true,\n          message: 'Please input current password',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          message: 'At least 3 digits long',\n          trigger: 'blur'\n        }],\n        newPassword: [{\n          required: true,\n          message: 'Please input new password',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          message: 'At least 3 digits long',\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          required: true,\n          message: 'Please confirm your new password',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          message: 'At least 3 digits long',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.form.username = this.user.username;\n  },\n  props: {\n    collapseBtnClass: String,\n    collapse: Function,\n    user: Object\n  },\n  methods: {\n    logout: function logout() {\n      this.$store.commit(\"logout\");\n      this.$router.push(\"/login\");\n      localStorage.removeItem(\"user\");\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"menus\");\n      this.$message.success(\"Logout successfully\");\n    },\n    changePassword: function changePassword() {\n      this.dialogFormVisible = true;\n    },\n    save: function save() {\n      var _this = this;\n\n      this.$refs.pwdForm.validate(function (valid) {\n        if (valid) {\n          if (_this.form.newPassword !== _this.form.confirmPassword) {\n            _this.$message.error(\"The new password entered twice is not the same\");\n\n            return false;\n          }\n\n          _this.request.post(\"/user/password\", _this.form).then(function (res) {\n            if (res.code === 200) {\n              _this.$message.success(\"Successfully modified\");\n\n              _this.$store.commit(\"logout\");\n            } else {\n              _this.$message.error(\"The operation is abnormal, please change the password again\");\n            }\n          });\n        }\n      });\n    },\n    formCancel: function formCancel() {\n      this.dialogFormVisible = false;\n      this.$message.warning(\"Operation canceled\");\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;EACAA,cADA;EAGAC,IAHA,kBAGA;IACA;MACAC,QADA;MAEAC,wBAFA;MAGA;MACAC;QACAC,WACA;UAAAC;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAF;UAAAC;QAAA,CAFA,CADA;QAKAE,cACA;UAAAJ;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAF;UAAAC;QAAA,CAFA,CALA;QASAG,kBACA;UAAAL;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAF;UAAAC;QAAA,CAFA;MATA;IAJA;EAoBA,CAxBA;EAyBAI,OAzBA,qBAyBA;IACA;EACA,CA3BA;EA4BAC;IACAC,wBADA;IAEAC,kBAFA;IAGAC;EAHA,CA5BA;EAiCAC;IACAC,MADA,oBACA;MACA;MACA;MACAC;MACAA;MACAA;MAEA;IACA,CATA;IAUAC,cAVA,4BAUA;MACA;IACA,CAZA;IAaAC,IAbA,kBAaA;MAAA;;MACA;QACA;UACA;YACA;;YACA;UACA;;UACA;YACA;cACA;;cACA;YACA,CAHA,MAGA;cACA;YACA;UACA,CAPA;QAQA;MACA,CAfA;IAgBA,CA9BA;IA+BAC,UA/BA,wBA+BA;MACA;MACA;IACA;EAlCA;AAjCA","names":["name","data","form","dialogFormVisible","rules","password","required","message","trigger","min","newPassword","confirmPassword","created","props","collapseBtnClass","collapse","user","methods","logout","localStorage","changePassword","save","formCancel"],"sourceRoot":"src/components","sources":["Header.vue"],"sourcesContent":["<template>\r\n  <div style=\"font-size: 12px; line-height: 60px; display: flex\">\r\n    <div style=\"flex: 1; font-size: 18px\">\r\n      <span :class=\"collapseBtnClass\" style=\"cursor: pointer\" @click=\"collapse\"></span>\r\n      <el-breadcrumb separator=\"/\" style=\"display: inline-block; margin-left: 10px;\">\r\n        <el-breadcrumb-item :to=\"'/'\">Home</el-breadcrumb-item>\r\n        <el-breadcrumb-item>{{ this.$route.meta.name }}</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n    </div>\r\n    <el-dropdown style=\"width: 150px; cursor: pointer; text-align: right;\">\r\n      <div>\r\n        <img :src=\"user.avatar\" alt=\"\"\r\n             style=\"width: 30px; border-radius: 50%; position: relative; top: 10px; right: 5px\">\r\n        <span>{{ user.nickname }}</span><i class=\"el-icon-setting\" style=\"margin-left: 5px\"></i>\r\n      </div>\r\n      \r\n      <el-dropdown-menu slot=\"dropdown\" style=\"width: 150px; text-align: center;\">\r\n        <el-dropdown-item style=\"font-size: 14px; padding: 5px 0;\" class=\"el-icon-user-solid\">\r\n          <router-link to=\"/person\">Your Account</router-link>\r\n        </el-dropdown-item>\r\n        <br>\r\n        <el-dropdown-item style=\"font-size: 14px; padding: 5px 0\">\r\n          <div class=\"el-icon-edit\" @click=\"changePassword\" >Change Password</div>\r\n        </el-dropdown-item>\r\n        <el-dropdown-item style=\"font-size: 14px; padding: 5px 0;\" class=\"el-icon-right\">\r\n          <span style=\"text-decoration: none;\" @click=\"logout\">Sign Out</span>\r\n        </el-dropdown-item>\r\n      </el-dropdown-menu>\r\n    </el-dropdown>\r\n\r\n    <el-dialog title=\"Change Password\" :visible.sync=\"dialogFormVisible\" width=\"30%\" center>\r\n      <el-form label-width=\"200px\" size=\"small\" :model=\"form\" :rules=\"rules\" ref=\"pwdForm\">\r\n        <el-form-item label=\"Previous Password\" prop=\"password\">\r\n          <el-input v-model=\"form.password\" autocomplete=\"off\" show-password></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"New Password\" prop=\"newPassword\">\r\n          <el-input v-model=\"form.newPassword\" autocomplete=\"off\" show-password></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Confirm Password\" prop=\"confirmPassword\">\r\n          <el-input v-model=\"form.confirmPassword\" autocomplete=\"off\" show-password></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"formCancel\">Cancel</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">Confirm</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name:\"Header\",\r\n\r\n    data() {\r\n      return {\r\n        form:{},\r\n        dialogFormVisible:false,\r\n        // user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\r\n        rules: {\r\n          password: [\r\n            { required: true, message: 'Please input current password', trigger: 'blur' },\r\n            { min: 3, message: 'At least 3 digits long', trigger: 'blur' }\r\n          ],\r\n          newPassword: [\r\n            { required: true, message: 'Please input new password', trigger: 'blur' },\r\n            { min: 3, message: 'At least 3 digits long', trigger: 'blur' }\r\n          ],\r\n          confirmPassword: [\r\n            { required: true, message: 'Please confirm your new password', trigger: 'blur' },\r\n            { min: 3, message: 'At least 3 digits long', trigger: 'blur' }\r\n          ],\r\n        }\r\n\r\n      }\r\n    },\r\n    created() {\r\n      this.form.username = this.user.username\r\n    },\r\n    props:{\r\n      collapseBtnClass:String,\r\n      collapse:Function,\r\n      user: Object\r\n    },\r\n    methods: {\r\n      logout(){\r\n        this.$store.commit(\"logout\")\r\n        this.$router.push(\"/login\")\r\n        localStorage.removeItem(\"user\")\r\n        localStorage.removeItem(\"token\")\r\n        localStorage.removeItem(\"menus\")\r\n        \r\n        this.$message.success(\"Logout successfully\")\r\n      },\r\n      changePassword(){\r\n        this.dialogFormVisible = true\r\n      },\r\n      save() {\r\n        this.$refs.pwdForm.validate((valid) => {\r\n          if (valid) {\r\n            if (this.form.newPassword !== this.form.confirmPassword) {\r\n              this.$message.error(\"The new password entered twice is not the same\")\r\n              return false\r\n            }\r\n            this.request.post(\"/user/password\", this.form).then(res => {\r\n              if (res.code === 200) {\r\n                this.$message.success(\"Successfully modified\")\r\n                this.$store.commit(\"logout\")\r\n              } else {\r\n                this.$message.error(\"The operation is abnormal, please change the password again\")\r\n              }\r\n            })\r\n          }\r\n        })\r\n      },\r\n      formCancel(){\r\n        this.dialogFormVisible = false\r\n        this.$message.warning(\"Operation canceled\")\r\n      },\r\n\r\n    },\r\n  }\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}