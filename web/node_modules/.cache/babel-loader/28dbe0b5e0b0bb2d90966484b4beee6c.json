{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as echarts from 'echarts';\nexport default {\n  name: \"Market\",\n  data: function data() {\n    return {\n      tableData: [],\n      total: 0,\n      currentPage: 1,\n      pageSize: 5,\n      crop: \"\",\n      form: {},\n      multipleSelection: [],\n      dialogFormVisible: false,\n      rules: {\n        date: [{\n          required: true,\n          message: 'Please choose the date',\n          trigger: 'blur'\n        }],\n        crop: [{\n          required: true,\n          message: 'Please choose one crop',\n          trigger: 'blur'\n        }],\n        unitPrice: [{\n          required: true,\n          message: 'Please input the price',\n          trigger: 'blur'\n        }]\n      },\n      dateVal: '',\n      pickerOptions: {\n        shortcuts: [{\n          text: 'within 7 days',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: 'within 30 days',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: 'within 90 days',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      }\n    };\n  },\n  watch: {\n    dateVal: function dateVal(val) {\n      if (val == null) this.dateVal = '';\n    }\n  },\n  created: function created() {\n    this.loadPage();\n  },\n  methods: {\n    rowClass: function rowClass() {\n      return \"text-align:center\";\n    },\n    loadPage: function loadPage() {\n      var _this = this;\n\n      this.request.get(\"/market-trend/page\", {\n        params: {\n          currentPage: this.currentPage,\n          pageSize: this.pageSize,\n          crop: this.crop,\n          beginDate: this.dateVal[0],\n          endDate: this.dateVal[1]\n        }\n      }).then(function (res) {\n        _this.tableData = res.data.records;\n        _this.total = res.data.total;\n        var maxPage = parseInt((_this.total - 1) / _this.pageSize + 1);\n        console.log(maxPage);\n\n        if (_this.currentPage > maxPage) {\n          _this.currentPage = maxPage;\n          console.log('currentPage' + _this.currentPage);\n        }\n      });\n    },\n    handleSizeChange: function handleSizeChange(pageSize) {\n      this.pageSize = pageSize;\n      this.loadPage();\n    },\n    handleCurrentChange: function handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      this.loadPage();\n    },\n    handleAdd: function handleAdd() {\n      this.dialogFormVisible = true;\n      this.form = {};\n    },\n    save: function save() {\n      var _this2 = this;\n\n      this.$refs['marketForm'].validate(function (valid) {\n        if (valid) {\n          // Form validation is valid\n          _this2.request.post(\"/market-trend\", _this2.form).then(function (res) {\n            if (res.code === 200) {\n              _this2.$message.success(\"Successfully saved\");\n\n              _this2.dialogFormVisible = false;\n\n              _this2.loadPage();\n            } else {\n              _this2.$message.error(\"Failed to save, please try again\");\n            }\n          });\n        } else {\n          _this2.$message.error(\"Failed to save, please check that your data meets the requirements\");\n        }\n      });\n    },\n    handleEdit: function handleEdit(row) {\n      this.form = Object.assign({}, row);\n      this.dialogFormVisible = true;\n    },\n    del: function del(id) {\n      var _this3 = this;\n\n      this.request.delete(\"/market-trend/\" + id).then(function (res) {\n        if (res.code === 200) {\n          _this3.$message.success(\"Successfully deleted\");\n\n          _this3.loadPage();\n        } else {\n          _this3.$message.error(\"Failed to delete\");\n        }\n      });\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    delBatch: function delBatch() {\n      var _this4 = this;\n\n      var ids = this.multipleSelection.map(function (v) {\n        return v.id;\n      });\n      this.request.post(\"/market-trend/batchDel\", ids).then(function (res) {\n        if (res.code === 200) {\n          _this4.$message.success(\"Successfully deleted\");\n\n          _this4.loadPage();\n        } else {\n          _this4.$message.error(\"Failed to delete\");\n        }\n      });\n    },\n    reset: function reset() {\n      this.crop = \"\", this.dateVal = \"\", this.currentPage = 1;\n      this.loadPage();\n    },\n    cancel: function cancel() {\n      this.$message.warning(\"Operation successfully canceled\");\n    },\n    formCancel: function formCancel() {\n      this.dialogFormVisible = false;\n      this.$message.warning(\"Form submission canceled\");\n    },\n    getChart: function getChart(res) {\n      var priceChartDom = document.getElementById('price');\n      var priceChart = echarts.init(priceChartDom);\n      var priceOption = {\n        title: {\n          text: 'Unit Price',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left'\n        },\n        toolbox: {\n          show: true,\n          //toolbox的配置项\n          feature: {\n            //辅助线的开关\n            mark: {\n              show: true\n            },\n            //数据视图\n            dataView: {\n              show: true,\n              readOnly: false\n            },\n            //动态类型切换\n            magicType: {\n              show: true,\n              //line为折线图，bar为柱状图\n              type: ['line', 'bar']\n            },\n            //配置项还原\n            restore: {\n              show: true\n            },\n            //将图标保存为图片\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        calculable: true,\n        xAxis: {\n          name: 'Date',\n          type: 'category',\n          //数值起始和结束两端空白策略\n          boundaryGap: false,\n          data: []\n        },\n        yAxis: {\n          name: 'Price',\n          type: 'value',\n          interval: 300,\n          min: 3300,\n          max: 4500\n        },\n        series: [{\n          data: [],\n          type: 'line'\n        }]\n      };\n      console.log(res);\n      var arr = new Array(res.data.records.length);\n      var arr2 = new Array(res.data.records.length);\n\n      for (var i = 0; i < arr.length; i++) {\n        arr[i] = res.data.records[i].unitPrice;\n        arr2[i] = res.data.records[i].date;\n      }\n\n      priceOption.series[0].data = arr;\n      priceOption.xAxis.data = arr2;\n      priceChart.setOption(priceOption);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["name","data","tableData","total","currentPage","pageSize","crop","form","multipleSelection","dialogFormVisible","rules","date","required","message","trigger","unitPrice","dateVal","pickerOptions","shortcuts","text","onClick","picker","start","watch","val","created","methods","rowClass","loadPage","params","beginDate","endDate","then","console","handleSizeChange","handleCurrentChange","handleAdd","save","handleEdit","row","del","id","handleSelectionChange","delBatch","reset","cancel","formCancel","getChart","res","title","left","tooltip","legend","orient","toolbox","show","feature","mark","dataView","readOnly","magicType","type","restore","saveAsImage","calculable","xAxis","boundaryGap","yAxis","interval","min","max","series","arr","arr2","priceOption","priceChart"],"sourceRoot":"src/views","sources":["Market.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div style=\"margin-bottom: 30px;\">\r\n      \r\n    </div>\r\n\r\n    <el-row :gutter=\"10\" style=\"margin-bottom: 40px;\">\r\n      <el-col :span=\"12\">\r\n        <div id=\"price\" style=\"widows: 500px; height: 400px;\"></div>\r\n      </el-col>\r\n      <el-col :span=\"12\">\r\n          <div id=\"trend\" style=\"widows: 500px; height: 400px;\"></div>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-form :inline=\"true\" class=\"demo-form-inline\">\r\n      <el-form-item prop=\"crop\">\r\n        <el-select filterable v-model=\"crop\" placeholder=\"Please select a crop name\">\r\n            <el-option label=\"paddy\" value=\"paddy\"></el-option>\r\n            <el-option label=\"potato\" value=\"potato\"></el-option>\r\n            <el-option label=\"soybean\" value=\"soybean\"></el-option>\r\n            <el-option label=\"peanut\" value=\"peanut\"></el-option>\r\n            <el-option label=\"wheat\" value=\"wheat\"></el-option>\r\n            <el-option label=\"barley\" value=\"barley\"></el-option>\r\n          </el-select>\r\n      </el-form-item>\r\n      <el-form-item prop=\"date\">\r\n        <el-date-picker\r\n          v-model=\"dateVal\"\r\n          type=\"daterange\"\r\n          unlink-panels\r\n          range-separator=\"to\"\r\n          start-placeholder=\"Begin date\"\r\n          end-placeholder=\"End date\"\r\n          :picker-options=\"pickerOptions\"\r\n          value-format=\"yyyy-MM-dd\">\r\n        </el-date-picker>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button class=\"ml-5\" type=\"primary\" @click=\"loadPage\" icon=\"el-icon-search\">Search</el-button>\r\n        <el-button class=\"ml-5\" type=\"warning\" @click=\"reset\" icon=\"el-icon-refresh\">Reset</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <div style=\"margin: 10px 0;\">\r\n      <el-button type=\"primary\" @click=\"handleAdd\">Add <i class=\"el-icon-circle-plus-outline\"></i></el-button>\r\n      <el-popconfirm\r\n        class=\"ml-5\"\r\n        confirm-button-text='DELETE'\r\n        cancel-button-text='CANCEL'\r\n        icon=\"el-icon-info\"\r\n        icon-color=\"red\"\r\n        title=\"Are you sure you want to delete these data?\"\r\n        @confirm=\"delBatch\"\r\n        @cancel=\"cancel\"\r\n      >\r\n      <el-button type=\"danger\" slot=\"reference\">Delete in bulk <i class=\"el-icon-remove-outline\"></i></el-button>\r\n      </el-popconfirm>\r\n      <el-button type=\"primary\" class=\"ml-5\">Import <i class=\"el-icon-document-add\"></i></el-button>\r\n      <el-button type=\"primary\" class=\"ml-5\">Download <i class=\"el-icon-download\"></i></el-button>\r\n    </div>\r\n\r\n    <el-table \r\n      :data=\"tableData\" \r\n      :default-sort = \"{prop: 'date', order: 'descending'}\" \r\n      border \r\n      stripe \r\n      :header-cell-style=\"{ textAlign: 'center', background:'beige' }\" \r\n      :cell-style=\"rowClass\"\r\n      @selection-change=\"handleSelectionChange\">\r\n      \r\n      <div slot=\"empty\" style=\"text-align: left;\">\r\n        <el-empty description=\"Sorry, there is no data you are looking for\" />\r\n      </div>\r\n      <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n      <el-table-column prop=\"date\" label=\"Date\" sortable width=\"100\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"crop\" label=\"Crop\" width=\"150\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"unitPrice\" label=\"Unit Price (GBP per ton)\" sortable>\r\n      </el-table-column>\r\n      <el-table-column prop=\"supply\" label=\"Supply (10,000 tons)\" >\r\n      </el-table-column>\r\n      <el-table-column prop=\"demand\" label=\"Demand (10,000 tons)\" >\r\n      </el-table-column>\r\n      <el-table-column prop=\"option\" label=\"Operation\" width=\"200\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"success\" @click=\"handleEdit(scope.row)\">Edit <i class=\"el-icon-edit\"></i></el-button>\r\n          <el-popconfirm\r\n            class=\"ml-5\"\r\n            confirm-button-text='DELETE'\r\n            cancel-button-text='CANCEL'\r\n            icon=\"el-icon-info\"\r\n            icon-color=\"red\"\r\n            title=\"Are you sure to delete?\"\r\n            @confirm=\"del(scope.row.id)\"\r\n            @cancel=\"cancel\"\r\n          >\r\n          <el-button type=\"danger\" slot=\"reference\">Delete <i class=\"el-icon-remove-outline\"></i></el-button>\r\n          </el-popconfirm>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <div style=\"padding: 10px 0;\">\r\n      <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"currentPage\"\r\n        :page-sizes=\"[5, 10, 20]\"\r\n        :page-size=pageSize\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\">\r\n      </el-pagination>\r\n    </div>\r\n\r\n    <el-dialog title=\"Market Information\" :visible.sync=\"dialogFormVisible\" width=\"30%\" center>\r\n      <el-form label-width=\"auto\" size=\"small\" :model=\"form\" :rules=\"rules\" ref=\"marketForm\">\r\n        <el-form-item label=\"Date\" prop=\"date\">\r\n          <el-col :span=\"11\">\r\n            <el-date-picker type=\"date\" placeholder=\"select date\" v-model=\"form.date\" style=\"width: 100%;\" value-format=\"yyyy-MM-dd\"></el-date-picker>\r\n          </el-col>\r\n        </el-form-item>\r\n        <el-form-item label=\"Crop\" prop=\"crop\">\r\n          <el-select filterable v-model=\"form.crop\" placeholder=\"Please select a crop name\">\r\n            <el-option label=\"paddy\" value=\"paddy\"></el-option>\r\n            <el-option label=\"potato\" value=\"potato\"></el-option>\r\n            <el-option label=\"soybean\" value=\"soybean\"></el-option>\r\n            <el-option label=\"peanut\" value=\"peanut\"></el-option>\r\n            <el-option label=\"wheat\" value=\"wheat\"></el-option>\r\n            <el-option label=\"barley\" value=\"barley\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"Unit Price\" prop=\"unitPrice\">\r\n          <el-input \r\n            type=\"number\" \r\n            v-model.number=\"form.unitPrice\" \r\n            autocomplete=\"off\" \r\n            placeholder=\"(GBP per ton)\"\r\n            onKeypress=\"return (/[\\d]/.test(String.fromCharCode(event.keyCode)))\">\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Supply\">\r\n          <el-input type=\"number\" v-model.number=\"form.supply\" autocomplete=\"off\" placeholder=\"(in 10,000 tons)\" onKeypress=\"return (/[\\d]/.test(String.fromCharCode(event.keyCode)))\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Demand\">\r\n          <el-input type=\"number\" v-model.number=\"form.demand\" autocomplete=\"off\" placeholder=\"(in 10,000 tons)\" onKeypress=\"return (/[\\d]/.test(String.fromCharCode(event.keyCode)))\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"formCancel\">Cancel</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">Confirm</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from 'echarts'; \r\n  export default {\r\n    name:\"Market\",\r\n    data() {\r\n      return {\r\n        tableData: [],\r\n        total:0,\r\n        currentPage:1,\r\n        pageSize:5,\r\n        crop:\"\",\r\n        form:{},\r\n        multipleSelection: [],\r\n        dialogFormVisible: false,\r\n\r\n        rules: {\r\n          date: [ {required: true, message: 'Please choose the date', trigger: 'blur'},],\r\n          crop: [{required: true, message: 'Please choose one crop', trigger: 'blur'},],\r\n          unitPrice: [{required: true, message: 'Please input the price', trigger: 'blur'},],\r\n        },\r\n\r\n        dateVal:'',\r\n        pickerOptions: {\r\n          shortcuts: [{\r\n            text: 'within 7 days',\r\n            onClick(picker) {\r\n              const end = new Date();\r\n              const start = new Date();\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n              picker.$emit('pick', [start, end]);\r\n            }\r\n          }, {\r\n            text: 'within 30 days',\r\n            onClick(picker) {\r\n              const end = new Date();\r\n              const start = new Date();\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n              picker.$emit('pick', [start, end]);\r\n            }\r\n          }, {\r\n            text: 'within 90 days',\r\n            onClick(picker) {\r\n              const end = new Date();\r\n              const start = new Date();\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n              picker.$emit('pick', [start, end]);\r\n            }\r\n          }]\r\n        },\r\n      }\r\n    },\r\n    watch:{\r\n      dateVal(val){\r\n        if(val == null) this.dateVal = ''\r\n      }\r\n    },\r\n    created() {\r\n      this.loadPage()\r\n    },\r\n    methods: {\r\n      rowClass(){\r\n        return \"text-align:center\"\r\n      },\r\n      loadPage(){\r\n        this.request.get(\"/market-trend/page\", {\r\n          params:{\r\n            currentPage: this.currentPage,\r\n            pageSize: this.pageSize,\r\n            crop:this.crop,\r\n            beginDate:this.dateVal[0],\r\n            endDate:this.dateVal[1],\r\n          }\r\n        }).then(res => {\r\n            this.tableData = res.data.records\r\n            this.total = res.data.total\r\n            let maxPage = parseInt((this.total - 1) / this.pageSize + 1);\r\n            console.log(maxPage)\r\n            if(this.currentPage > maxPage){\r\n              this.currentPage = maxPage\r\n              console.log('currentPage' + this.currentPage)\r\n            }\r\n          })\r\n      },\r\n      handleSizeChange(pageSize){\r\n        this.pageSize = pageSize\r\n        this.loadPage()\r\n      },\r\n      handleCurrentChange(currentPage){\r\n        this.currentPage = currentPage\r\n        this.loadPage()\r\n      },\r\n      handleAdd(){\r\n        this.dialogFormVisible = true\r\n\r\n        this.form = {}\r\n      },\r\n      save(){\r\n        this.$refs['marketForm'].validate((valid) => {\r\n            if (valid) {  // Form validation is valid\r\n              this.request.post(\"/market-trend\", this.form).then(res => {\r\n                if(res.code === 200){\r\n                  this.$message.success(\"Successfully saved\")\r\n                  this.dialogFormVisible = false;\r\n                  this.loadPage()\r\n                }else{\r\n                  this.$message.error(\"Failed to save, please try again\")\r\n                }\r\n              })\r\n            }else{\r\n              this.$message.error(\"Failed to save, please check that your data meets the requirements\")\r\n            }\r\n        });\r\n      },\r\n      handleEdit(row){\r\n        this.form = Object.assign({}, row) \r\n        this.dialogFormVisible = true\r\n      },\r\n      del(id){\r\n        this.request.delete(\"/market-trend/\" + id).then(res => {\r\n          if(res.code === 200){\r\n            this.$message.success(\"Successfully deleted\")\r\n            this.loadPage()\r\n          }else{\r\n            this.$message.error(\"Failed to delete\")\r\n          }\r\n        })\r\n      },\r\n      handleSelectionChange(val){\r\n        this.multipleSelection = val\r\n      },\r\n      delBatch(){\r\n        let ids = this.multipleSelection.map(v => v.id)\r\n        this.request.post(\"/market-trend/batchDel\", ids).then(res => {\r\n          if(res.code === 200){\r\n            this.$message.success(\"Successfully deleted\")\r\n            this.loadPage()\r\n          }else{\r\n            this.$message.error(\"Failed to delete\")\r\n          }\r\n        })\r\n      },\r\n      reset(){\r\n        this.crop = \"\",\r\n        this.dateVal= \"\",\r\n        this.currentPage = 1;\r\n        this.loadPage()\r\n      },\r\n      cancel(){\r\n        this.$message.warning(\"Operation successfully canceled\")\r\n      },\r\n      formCancel(){\r\n        this.dialogFormVisible = false\r\n        this.$message.warning(\"Form submission canceled\")\r\n      },\r\n      getChart(res) {\r\n        var priceChartDom = document.getElementById('price');\r\n        var priceChart = echarts.init(priceChartDom);\r\n\r\n        var priceOption = {\r\n          title: {\r\n            text: 'Unit Price',\r\n            left: 'center'\r\n          },\r\n          tooltip: {\r\n            trigger: 'item'\r\n          },\r\n          legend: {\r\n            orient: 'vertical',\r\n            left: 'left'\r\n          },\r\n          toolbox: {\r\n              show: true,\r\n              //toolbox的配置项\r\n              feature: {\r\n                  //辅助线的开关\r\n                  mark: { show: true },\r\n                  //数据视图\r\n                  dataView: {\r\n                      show: true,\r\n                      readOnly: false\r\n                  },\r\n                  //动态类型切换\r\n                  magicType: {\r\n                      show: true,\r\n                      //line为折线图，bar为柱状图\r\n                      type: ['line', 'bar']\r\n                  },\r\n                  //配置项还原\r\n                  restore: { show: true },\r\n                  //将图标保存为图片\r\n                  saveAsImage: { show: true }\r\n              }\r\n          },\r\n          calculable: true,\r\n          xAxis: {\r\n            name: 'Date',\r\n            type: 'category',\r\n            //数值起始和结束两端空白策略\r\n            boundaryGap: false,\r\n            data: []\r\n          },\r\n          yAxis: {\r\n            name: 'Price',\r\n            type: 'value',\r\n            interval: 300,\r\n            min: 3300,\r\n            max: 4500,\r\n          },\r\n          series: [\r\n            {\r\n              data: [],\r\n              type: 'line'\r\n            }\r\n          ]\r\n        };\r\n        console.log(res)\r\n        var arr = new Array(res.data.records.length);\r\n        var arr2 = new Array(res.data.records.length);\r\n        for(var i = 0; i < arr.length; i++){\r\n          arr[i] = res.data.records[i].unitPrice;\r\n          arr2[i] = res.data.records[i].date;\r\n        }\r\n        priceOption.series[0].data = arr;\r\n        priceOption.xAxis.data = arr2;\r\n        priceChart.setOption(priceOption);\r\n\r\n        \r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}