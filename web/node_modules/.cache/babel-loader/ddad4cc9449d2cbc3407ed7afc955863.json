{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"Person\",\n\n  data() {\n    return {\n      form: {},\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {}\n    };\n  },\n\n  created() {\n    this.getUser().then(res => {\n      this.form = res;\n    });\n  },\n\n  methods: {\n    async getUser() {\n      return (await this.request.get(\"/user/userInfo\")).data;\n    },\n\n    save() {\n      this.request.put(\"/user/userInfo\", this.form).then(res => {\n        if (res.code == 200) {\n          this.$message.success(\"Personal information modified successfully\"); // The method that triggers the parent to update the User\n\n          this.$emit(\"refreshUser\"); // Update the user information stored by the browser\n\n          this.getUser().then(res => {\n            res.token = JSON.parse(localStorage.getItem(\"token\"));\n            localStorage.setItem(\"user\", JSON.stringify(res));\n          });\n        } else {\n          this.$message.error(\"Information modification failed, please try again\");\n        }\n      });\n    },\n\n    handleAvatarSuccess(res) {\n      this.form.avatar = res.data;\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;EACAA,cADA;;EAEAC;IACA;MACAC,QADA;MAEAC;IAFA;EAIA,CAPA;;EAQAC;IACA;MACA;IACA,CAFA;EAGA,CAZA;;EAaAC;IACA;MACA;IACA,CAHA;;IAIAC;MACA;QACA;UACA,oEADA,CAEA;;UACA,0BAHA,CAKA;;UACA;YACAC;YACAC;UACA,CAHA;QAIA,CAVA,MAUA;UACA;QACA;MACA,CAdA;IAeA,CApBA;;IAqBAC;MACA;IACA;;EAvBA;AAbA","names":["name","data","form","user","created","methods","save","res","localStorage","handleAvatarSuccess"],"sourceRoot":"src/views","sources":["Person.vue"],"sourcesContent":["<template>\r\n  <el-card style=\"width: 500px;\">\r\n    <el-form label-width=\"80px\" size=\"small\">\r\n      <el-upload\r\n        class=\"avatar-uploader\"\r\n        action=\"http://localhost:9999/upload\"\r\n        accept=\".jpg, .png\"\r\n        :show-file-list=\"false\"\r\n        :on-success=\"handleAvatarSuccess\"\r\n        name=\"img\">\r\n        <img v-if=\"form.avatar\" :src=\"form.avatar\" class=\"avatar\">\r\n        <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n        <div slot=\"tip\" style=\"color: orange;\" class=\"el-upload__tip\">Only accept jpg/png files, and no more than 4MB</div>\r\n      </el-upload>\r\n      <el-form-item label=\"username\">\r\n        <el-input v-model=\"form.username\" autocomplete=\"off\" disabled></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"nickname\">\r\n        <el-input v-model=\"form.nickname\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"email\">\r\n        <el-input v-model=\"form.email\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"sex\">\r\n        <el-radio v-model=\"form.sex\" label=\"0\">Male</el-radio>\r\n        <el-radio v-model=\"form.sex\" label=\"1\">Female</el-radio>\r\n        <el-radio v-model=\"form.sex\" label=\"2\">Unknown</el-radio>\r\n      </el-form-item>\r\n      <el-form-item label=\"phone\">\r\n        <el-input v-model=\"form.phonenumber\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"save\">Save</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name:\"Person\",\r\n    data() {\r\n      return {\r\n        form:{},\r\n        user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\r\n      }\r\n    },\r\n    created(){\r\n      this.getUser().then(res => {\r\n        this.form = res\r\n      })\r\n    },\r\n    methods:{\r\n      async getUser() {\r\n        return (await this.request.get(\"/user/userInfo\")).data\r\n      },\r\n      save(){\r\n        this.request.put(\"/user/userInfo\", this.form).then(res => {\r\n          if(res.code == 200){\r\n            this.$message.success(\"Personal information modified successfully\")\r\n            // The method that triggers the parent to update the User\r\n            this.$emit(\"refreshUser\")\r\n\r\n            // Update the user information stored by the browser\r\n            this.getUser().then(res => {\r\n              res.token = JSON.parse(localStorage.getItem(\"token\"))\r\n              localStorage.setItem(\"user\", JSON.stringify(res))\r\n            })\r\n          }else{\r\n            this.$message.error(\"Information modification failed, please try again\")\r\n          }\r\n        })\r\n      },\r\n      handleAvatarSuccess(res){\r\n        this.form.avatar = res.data\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .avatar-uploader{\r\n    text-align: center;\r\n    padding-bottom: 10px;\r\n  }\r\n  .avatar-uploader .el-upload {\r\n    border: 1px dashed #d9d9d9;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n  .avatar-uploader .el-upload:hover {\r\n    border-color: #409EFF;\r\n  }\r\n  .avatar-uploader-icon {\r\n    font-size: 28px;\r\n    color: #8c939d;\r\n    width: 138px;\r\n    height: 138px;\r\n    line-height: 138px;\r\n    text-align: center;\r\n  }\r\n  .avatar {\r\n    width: 138px;\r\n    height: 138px;\r\n    display: block;\r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module"}