{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\n//\n//\n//\n//\nimport Skycons from \"./skycons\";\n\nfunction buildWrapper(skycons) {\n  var wrapped = {};\n  wrapped.paused = !skycons.interval;\n\n  wrapped.play = function () {\n    skycons.play();\n    wrapped.paused = false;\n  };\n\n  wrapped.pause = function () {\n    skycons.pause();\n    wrapped.paused = true;\n  };\n\n  return wrapped;\n}\n\nexport default {\n  props: {\n    // Weather condition\n    condition: {\n      type: String,\n      required: true\n    },\n    // Icon size\n    size: {\n      type: [Number, String],\n      default: 64\n    },\n    // Icon color\n    color: {\n      type: String,\n      default: \"black\"\n    },\n    // Start with paused animation\n    paused: {\n      type: Boolean,\n      default: false\n    },\n    // The animation speed\n    speed: {\n      type: [Number, String],\n      default: 1\n    }\n  },\n  computed: {\n    width: function width() {\n      return \"\" + this.size;\n    },\n    height: function height() {\n      return \"\" + this.size;\n    },\n    icon: function icon() {\n      return this.condition.toUpperCase().replace(/[\\s.-]/g, \"_\");\n    }\n  },\n  mounted: function mounted() {\n    var skycons = new Skycons({\n      color: this.color,\n      speed: this.speed\n    });\n    skycons.set(this.$el, Skycons[this.icon]);\n    if (!this.paused) skycons.play();\n    this.$emit(\"load\", buildWrapper(skycons));\n  }\n};","map":{"version":3,"mappings":";;;;;;;AAKA;;AAEA;EACA;EACAA;;EACAA;IACAC;IACAD;EACA,CAHA;;EAIAA;IACAC;IACAD;EACA,CAHA;;EAIA;AACA;;AAEA;EACAE;IACA;IACAC;MACAC,YADA;MAEAC;IAFA,CAFA;IAOA;IACAC;MACAF,sBADA;MAEAG;IAFA,CARA;IAaA;IACAC;MACAJ,YADA;MAEAG;IAFA,CAdA;IAmBA;IACAE;MACAL,aADA;MAEAG;IAFA,CApBA;IAyBA;IACAG;MACAN,sBADA;MAEAG;IAFA;EA1BA,CADA;EAgCAI;IACAC,KADA,mBACA;MACA;IACA,CAHA;IAIAC,MAJA,oBAIA;MACA;IACA,CANA;IAOAC,IAPA,kBAOA;MACA;IACA;EATA,CAhCA;EA2CAC,OA3CA,qBA2CA;IACA;MACAP,iBADA;MAEAE;IAFA;IAIAT;IACA;IACA;EACA;AAnDA","names":["wrapped","skycons","props","condition","type","required","size","default","color","paused","speed","computed","width","height","icon","mounted"],"sourceRoot":"node_modules/vue-skycons/src","sources":["Skycon.vue"],"sourcesContent":["<template>\n  <canvas :width=\"width\" :height=\"height\" :data-condition=\"condition\"></canvas>\n</template>\n\n<script>\nimport Skycons from \"./skycons\";\n\nfunction buildWrapper(skycons) {\n  const wrapped = {};\n  wrapped.paused = !skycons.interval;\n  wrapped.play = () => {\n    skycons.play();\n    wrapped.paused = false;\n  };\n  wrapped.pause = () => {\n    skycons.pause();\n    wrapped.paused = true;\n  };\n  return wrapped;\n}\n\nexport default {\n  props: {\n    // Weather condition\n    condition: {\n      type: String,\n      required: true\n    },\n\n    // Icon size\n    size: {\n      type: [Number, String],\n      default: 64\n    },\n\n    // Icon color\n    color: {\n      type: String,\n      default: \"black\"\n    },\n\n    // Start with paused animation\n    paused: {\n      type: Boolean,\n      default: false\n    },\n\n    // The animation speed\n    speed: {\n      type: [Number, String],\n      default: 1\n    }\n  },\n  computed: {\n    width() {\n      return \"\" + this.size;\n    },\n    height() {\n      return \"\" + this.size;\n    },\n    icon() {\n      return this.condition.toUpperCase().replace(/[\\s.-]/g, \"_\");\n    }\n  },\n  mounted() {\n    const skycons = new Skycons({\n      color: this.color,\n      speed: this.speed\n    });\n    skycons.set(this.$el, Skycons[this.icon]);\n    if (!this.paused) skycons.play();\n    this.$emit(\"load\", buildWrapper(skycons));\n  }\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}