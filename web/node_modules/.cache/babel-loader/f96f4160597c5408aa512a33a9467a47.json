{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { AMapManager, lazyAMapApiLoaderInstance } from 'vue-amap';\nvar amapManager = new AMapManager();\nexport default {\n  name: 'Home',\n  data: function data() {\n    var self = this;\n    return {\n      address: null,\n      searchKey: '',\n      amapManager: amapManager,\n      markers: [],\n      searchOption: {\n        city: '全国',\n        citylimit: true\n      },\n      center: [112.938888, 28.228272],\n      zoom: 17,\n      lng: 0,\n      lat: 0,\n      loaded: false,\n      events: {\n        init: function init() {\n          lazyAMapApiLoaderInstance.load().then(function () {\n            self.initSearch();\n          });\n        },\n        // 点击获取地址的数据\n        click: function click(e) {\n          self.markers = [];\n          var _e$lnglat = e.lnglat,\n              lng = _e$lnglat.lng,\n              lat = _e$lnglat.lat;\n          self.lng = lng;\n          self.lat = lat;\n          self.center = [lng, lat];\n          self.markers.push([lng, lat]); // 这里通过高德 SDK 完成。\n\n          var geocoder = new AMap.Geocoder({\n            radius: 1000,\n            extensions: 'all'\n          });\n          geocoder.getAddress([lng, lat], function (status, result) {\n            if (status === 'complete' && result.info === 'OK') {\n              if (result && result.regeocode) {\n                console.log(result.regeocode.formattedAddress); //控制台打印地址\n\n                self.address = result.regeocode.formattedAddress;\n                self.searchKey = result.regeocode.formattedAddress;\n                self.$nextTick();\n              }\n            }\n          });\n        }\n      },\n      // 一些工具插件\n      plugin: [{\n        pName: 'Geocoder',\n        events: {\n          init: function init(o) {//console.log(\"一些工具插件--地址\"+o.getAddress())\n          }\n        }\n      }, {\n        // 定位\n        pName: 'Geolocation',\n        events: {\n          init: function init(o) {\n            // o是高德地图定位插件实例\n            o.getCurrentPosition(function (status, result) {\n              if (result && result.position) {\n                // 设置经度\n                self.lng = result.position.lng; // 设置维度\n\n                self.lat = result.position.lat; // 设置坐标\n\n                self.center = [self.lng, self.lat];\n                self.markers.push([self.lng, self.lat]); // load\n\n                self.loaded = true; // 页面渲染好后\n\n                self.$nextTick();\n              }\n            });\n          }\n        }\n      }, {\n        // 工具栏\n        pName: 'ToolBar',\n        events: {\n          init: function init(instance) {//console.log(\"工具栏:\"+instance);\n          }\n        }\n      }, {\n        // 鹰眼\n        pName: 'OverView',\n        events: {\n          init: function init(instance) {//console.log(\"鹰眼:\"+instance);\n          }\n        }\n      }, {\n        // 地图类型\n        pName: 'MapType',\n        defaultType: 0,\n        events: {\n          init: function init(instance) {//console.log(\"地图类型:\"+instance);\n          }\n        }\n      }, {\n        // 搜索\n        pName: 'PlaceSearch',\n        events: {\n          init: function init(instance) {//console.log(\"搜索:\"+instance)\n          }\n        }\n      }]\n    };\n  },\n  methods: {\n    initSearch: function initSearch() {\n      var vm = this;\n      var map = this.amapManager.getMap();\n      AMapUI.loadUI(['misc/PoiPicker'], function (PoiPicker) {\n        var poiPicker = new PoiPicker({\n          input: 'search',\n          placeSearchOptions: {\n            map: map,\n            pageSize: 10\n          },\n          suggestContainer: 'searchTip',\n          searchResultsContainer: 'searchTip'\n        });\n        vm.poiPicker = poiPicker; // 监听poi选中信息\n\n        poiPicker.on('poiPicked', function (poiResult) {\n          // console.log(poiResult)\n          var source = poiResult.source;\n          var poi = poiResult.item;\n\n          if (source !== 'search') {\n            poiPicker.searchByKeyword(poi.name);\n          } else {\n            poiPicker.clearSearchResults();\n            vm.markers = [];\n            var lng = poi.location.lng;\n            var lat = poi.location.lat;\n            var address = poi.cityname + poi.adname + poi.name;\n            vm.center = [lng, lat];\n            vm.markers.push([lng, lat]);\n            vm.lng = lng;\n            vm.lat = lat;\n            vm.address = address;\n            vm.searchKey = address;\n          }\n        });\n      });\n    },\n    searchByHand: function searchByHand() {\n      if (this.searchKey !== '') {\n        this.poiPicker.searchByKeyword(this.searchKey);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;EACAA,YADA;EAEAC,IAFA,kBAEA;IACA;IACA;MACAC,aADA;MAEAC,aAFA;MAGAC,wBAHA;MAIAC,WAJA;MAKAC;QACAC,UADA;QAEAC;MAFA,CALA;MASAC,+BATA;MAUAC,QAVA;MAWAC,MAXA;MAYAC,MAZA;MAaAC,aAbA;MAcAC;QACAC,IADA,kBACA;UACAC;YACAC;UACA,CAFA;QAGA,CALA;QAMA;QACAC,KAPA,iBAOAC,CAPA,EAOA;UACAF;UACA;UAAA;UAAA;UACAA;UACAA;UACAA;UACAA,8BANA,CAOA;;UACA;YACAG,YADA;YAEAC;UAFA;UAIAC;YACA;cACA;gBACAC,+CADA,CACA;;gBACAN;gBACAA;gBACAA;cACA;YACA;UACA,CATA;QAUA;MA7BA,CAdA;MA6CA;MACAO,SACA;QACAC,iBADA;QAEAX;UACAC,IADA,gBACAW,CADA,EACA,CACA;UACA;QAHA;MAFA,CADA,EASA;QACA;QACAD,oBAFA;QAGAX;UACAC,IADA,gBACAW,CADA,EACA;YACA;YACAA;cACA;gBACA;gBACAT,+BAFA,CAGA;;gBACAA,+BAJA,CAKA;;gBACAA;gBACAA,wCAPA,CAQA;;gBACAA,mBATA,CAUA;;gBACAA;cACA;YACA,CAdA;UAeA;QAlBA;MAHA,CATA,EAiCA;QACA;QACAQ,gBAFA;QAGAX;UACAC,IADA,gBACAY,QADA,EACA,CACA;UACA;QAHA;MAHA,CAjCA,EA0CA;QACA;QACAF,iBAFA;QAGAX;UACAC,IADA,gBACAY,QADA,EACA,CACA;UACA;QAHA;MAHA,CA1CA,EAmDA;QACA;QACAF,gBAFA;QAGAG,cAHA;QAIAd;UACAC,IADA,gBACAY,QADA,EACA,CACA;UACA;QAHA;MAJA,CAnDA,EA6DA;QACA;QACAF,oBAFA;QAGAX;UACAC,IADA,gBACAY,QADA,EACA,CACA;UACA;QAHA;MAHA,CA7DA;IA9CA;EAsHA,CA1HA;EA2HAE;IACAC,UADA,wBACA;MACA;MACA;MACAC;QACA;UACAC,eADA;UAEAC;YACAC,QADA;YAEAC;UAFA,CAFA;UAMAC,6BANA;UAOAC;QAPA;QASAC,yBAVA,CAWA;;QACAC;UACA;UACA;UACA;;UACA;YACAA;UACA,CAFA,MAEA;YACAA;YACAD;YACA;YACA;YACA;YACAA;YACAA;YACAA;YACAA;YACAA;YACAA;UACA;QACA,CAnBA;MAoBA,CAhCA;IAiCA,CArCA;IAsCAE,YAtCA,0BAsCA;MACA;QACA;MACA;IACA;EA1CA;AA3HA","names":["name","data","address","searchKey","amapManager","markers","searchOption","city","citylimit","center","zoom","lng","lat","loaded","events","init","lazyAMapApiLoaderInstance","self","click","e","radius","extensions","geocoder","console","plugin","pName","o","instance","defaultType","methods","initSearch","AMapUI","input","placeSearchOptions","map","pageSize","suggestContainer","searchResultsContainer","vm","poiPicker","searchByHand"],"sourceRoot":"src/views","sources":["Home.vue"],"sourcesContent":["<template lang=\"html\">\r\n <div style=\"width:100%;height:800px;\">\r\n    <div class=\"container\">\r\n      <div class=\"search-box\">\r\n        <input\r\n          v-model=\"searchKey\"\r\n          type=\"search\"\r\n          id=\"search\">\r\n        <button @click=\"searchByHand\">搜索</button>\r\n        <div class=\"tip-box\" id=\"searchTip\"></div>\r\n      </div>\r\n      <!--\r\n        amap-manager： 地图管理对象\r\n        vid：地图容器节点的ID\r\n        zooms： 地图显示的缩放级别范围，在PC上，默认范围[3,18]，取值范围[3-18]；在移动设备上，默认范围[3-19]，取值范围[3-19]\r\n        center： 地图中心点坐标值\r\n        plugin：地图使用的插件\r\n        events： 事件\r\n      -->\r\n      <el-amap class=\"amap-box\"\r\n        :amap-manager=\"amapManager\"\r\n        :vid=\"'amap-vue'\"\r\n        :zoom=\"zoom\"\r\n        :plugin=\"plugin\"\r\n        :center=\"center\"\r\n        :events=\"events\"\r\n      >\r\n        <!-- 标记 -->\r\n        <el-amap-marker v-for=\"(marker, index) in markers\" :position=\"marker\" :key=\"index\"></el-amap-marker>\r\n      </el-amap>\r\n    </div>\r\n </div>\r\n</template>\r\n\r\n<script>\r\nimport { AMapManager, lazyAMapApiLoaderInstance } from 'vue-amap'\r\nlet amapManager = new AMapManager()\r\nexport default {\r\n  name:'Home',\r\n  data() {\r\n    let self = this\r\n    return {\r\n      address: null,\r\n      searchKey: '',\r\n      amapManager,\r\n      markers: [],\r\n      searchOption: {\r\n        city: '全国',\r\n        citylimit: true\r\n      },\r\n      center: [112.938888,28.228272],\r\n      zoom: 17,\r\n      lng: 0,\r\n      lat: 0,\r\n      loaded: false,\r\n      events: {\r\n        init() {\r\n          lazyAMapApiLoaderInstance.load().then(() => {\r\n            self.initSearch()\r\n          })\r\n        },\r\n        // 点击获取地址的数据\r\n        click(e) {\r\n          self.markers = []\r\n          let { lng, lat } = e.lnglat\r\n          self.lng = lng\r\n          self.lat = lat\r\n          self.center = [lng, lat]\r\n          self.markers.push([lng, lat])\r\n          // 这里通过高德 SDK 完成。\r\n          let geocoder = new AMap.Geocoder({\r\n            radius: 1000,\r\n            extensions: 'all'\r\n          })\r\n          geocoder.getAddress([lng, lat], function(status, result) {\r\n            if (status === 'complete' && result.info === 'OK') {\r\n              if (result && result.regeocode) {\r\n                console.log(result.regeocode.formattedAddress) //控制台打印地址\r\n                self.address = result.regeocode.formattedAddress\r\n                self.searchKey = result.regeocode.formattedAddress\r\n                self.$nextTick()\r\n              }\r\n            }\r\n          })\r\n        }\r\n      },\r\n      // 一些工具插件\r\n      plugin: [\r\n        {\r\n          pName: 'Geocoder',\r\n          events: {\r\n            init (o) {\r\n              //console.log(\"一些工具插件--地址\"+o.getAddress())\r\n            }\r\n          }\r\n        },\r\n        {\r\n          // 定位\r\n          pName: 'Geolocation',\r\n          events: {\r\n            init(o) {\r\n              // o是高德地图定位插件实例\r\n              o.getCurrentPosition((status, result) => {\r\n                if (result && result.position) {\r\n                  // 设置经度\r\n                  self.lng = result.position.lng\r\n                  // 设置维度\r\n                  self.lat = result.position.lat\r\n                  // 设置坐标\r\n                  self.center = [self.lng, self.lat]\r\n                  self.markers.push([self.lng, self.lat])\r\n                  // load\r\n                  self.loaded = true\r\n                  // 页面渲染好后\r\n                  self.$nextTick()\r\n                }\r\n              })\r\n            }\r\n          }\r\n        },\r\n        {\r\n          // 工具栏\r\n          pName: 'ToolBar',\r\n          events: {\r\n            init(instance) {\r\n               //console.log(\"工具栏:\"+instance);\r\n            }\r\n          }\r\n        },\r\n        {\r\n          // 鹰眼\r\n          pName: 'OverView',\r\n          events: {\r\n            init(instance) {\r\n               //console.log(\"鹰眼:\"+instance);\r\n            }\r\n          }\r\n        },\r\n        {\r\n          // 地图类型\r\n          pName: 'MapType',\r\n          defaultType: 0,\r\n          events: {\r\n            init(instance) {\r\n               //console.log(\"地图类型:\"+instance);\r\n            }\r\n          }\r\n        },\r\n        {\r\n          // 搜索\r\n          pName: 'PlaceSearch',\r\n          events: {\r\n            init(instance) {\r\n               //console.log(\"搜索:\"+instance)\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    initSearch() {\r\n      let vm = this\r\n      let map = this.amapManager.getMap()\r\n      AMapUI.loadUI(['misc/PoiPicker'], function(PoiPicker) {\r\n        var poiPicker = new PoiPicker({\r\n          input: 'search',\r\n          placeSearchOptions: {\r\n            map: map,\r\n            pageSize: 10\r\n          },\r\n          suggestContainer: 'searchTip',\r\n          searchResultsContainer: 'searchTip'\r\n        })\r\n        vm.poiPicker = poiPicker\r\n        // 监听poi选中信息\r\n        poiPicker.on('poiPicked', function(poiResult) {\r\n          // console.log(poiResult)\r\n           let source = poiResult.source\r\n           let poi = poiResult.item\r\n           if (source !== 'search') {\r\n             poiPicker.searchByKeyword(poi.name)\r\n           } else {\r\n             poiPicker.clearSearchResults()\r\n             vm.markers = []\r\n             let lng = poi.location.lng\r\n             let lat = poi.location.lat\r\n             let address = poi.cityname + poi.adname + poi.name\r\n             vm.center = [lng, lat]\r\n             vm.markers.push([lng, lat])\r\n             vm.lng = lng\r\n             vm.lat = lat\r\n             vm.address = address\r\n             vm.searchKey = address\r\n           }\r\n        })\r\n      })\r\n    },\r\n    searchByHand() {\r\n      if (this.searchKey !== '') {\r\n        this.poiPicker.searchByKeyword(this.searchKey)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"css\">\r\n.container {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate3d(-50%, -50%, 0);\r\n  border: 1px solid #999;\r\n}\r\n.search-box {\r\n  position: absolute;\r\n  z-index: 5;\r\n  width: 30%;\r\n  left: 13%;\r\n  top: 10px;\r\n  height: 30px;\r\n}\r\n.search-box input {\r\n  float: left;\r\n  width: 80%;\r\n  height: 100%;\r\n  border: 1px solid #30ccc1;\r\n  padding: 0 8px;\r\n  outline: none;\r\n}\r\n.search-box button {\r\n  float: left;\r\n  width: 20%;\r\n  height: 100%;\r\n  background: #30ccc1;\r\n  border: 1px solid #30ccc1;\r\n  color: #fff;\r\n  outline: none;\r\n}\r\n.tip-box {\r\n  width: 100%;\r\n  max-height: 260px;\r\n  position: absolute;\r\n  top: 30px;\r\n  overflow-y: auto;\r\n  background-color: #fff;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}