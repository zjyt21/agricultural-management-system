{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nimport ElementUI from 'element-ui';\nvar request = axios.create({\n  baseURL: 'http://localhost:9999',\n  // 注意！！ 这里是全局统一加上了 '/api' 前缀，也就是说所有接口都会加上'/api'前缀在，页面里面写接口的时候就不要加 '/api'了，否则会出现2个'/api'，类似 '/api/api/user'这样的报错，切记！！！\n  timeout: 15000\n}); // request 拦截器\n// 可以自请求发送前对请求做一些处理\n// 比如统一加token，对请求参数统一加密\n\nrequest.interceptors.request.use(function (config) {\n  config.headers['Content-Type'] = 'application/json;charset=utf-8';\n  var token = localStorage.getItem(\"token\");\n\n  if (token) {\n    config.headers['token'] = JSON.parse(token); // 设置请求头\n  }\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n}); // response 拦截器\n// 可以在接口响应后统一处理结果\n\nrequest.interceptors.response.use(function (response) {\n  var res = response.data; // 如果是返回的文件\n\n  if (response.config.responseType === 'blob') {\n    return res;\n  } // 兼容服务端返回的字符串数据\n\n\n  if (typeof res === 'string') {\n    res = res ? JSON.parse(res) : res;\n  } //当权限验证不通过的时候给出提示\n\n\n  if (res.code === '401') {\n    ElementUI.Message({\n      message: res.msg,\n      type: 'error'\n    });\n  }\n\n  return res;\n}, function (error) {\n  console.log('err' + error); // for debug\n\n  return Promise.reject(error);\n});\nexport default request;","map":{"version":3,"names":["axios","ElementUI","request","create","baseURL","timeout","interceptors","use","config","headers","token","localStorage","getItem","JSON","parse","error","Promise","reject","response","res","data","responseType","code","Message","message","msg","type","console","log"],"sources":["E:/environment/project/agricultural-management-system/web/src/util/request.js"],"sourcesContent":["import axios from 'axios'\r\nimport ElementUI from 'element-ui';\r\n\r\nconst request = axios.create({\r\n\tbaseURL: 'http://localhost:9999',  // 注意！！ 这里是全局统一加上了 '/api' 前缀，也就是说所有接口都会加上'/api'前缀在，页面里面写接口的时候就不要加 '/api'了，否则会出现2个'/api'，类似 '/api/api/user'这样的报错，切记！！！\r\n    timeout: 15000\r\n})\r\n\r\n// request 拦截器\r\n// 可以自请求发送前对请求做一些处理\r\n// 比如统一加token，对请求参数统一加密\r\nrequest.interceptors.request.use(config => {\r\n    config.headers['Content-Type'] = 'application/json;charset=utf-8';\r\n  \r\n    let token = localStorage.getItem(\"token\")\r\n    if(token){\r\n        config.headers['token'] = JSON.parse(token);  // 设置请求头\r\n    }\r\n    return config\r\n}, error => {\r\n    return Promise.reject(error)\r\n});\r\n\r\n// response 拦截器\r\n// 可以在接口响应后统一处理结果\r\nrequest.interceptors.response.use(\r\n    response => {\r\n        let res = response.data;\r\n        // 如果是返回的文件\r\n        if (response.config.responseType === 'blob') {\r\n            return res\r\n        }\r\n        // 兼容服务端返回的字符串数据\r\n        if (typeof res === 'string') {\r\n            res = res ? JSON.parse(res) : res\r\n        }\r\n        //当权限验证不通过的时候给出提示\r\n        if(res.code === '401'){\r\n            ElementUI.Message({\r\n                message: res.msg,\r\n                type: 'error'\r\n            });\r\n        }\r\n        return res;\r\n    },\r\n    error => {\r\n        console.log('err' + error) // for debug\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\n\r\nexport default request\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;EAC5BC,OAAO,EAAE,uBADmB;EACO;EAChCC,OAAO,EAAE;AAFgB,CAAb,CAAhB,C,CAKA;AACA;AACA;;AACAH,OAAO,CAACI,YAAR,CAAqBJ,OAArB,CAA6BK,GAA7B,CAAiC,UAAAC,MAAM,EAAI;EACvCA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiC,gCAAjC;EAEA,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;;EACA,IAAGF,KAAH,EAAS;IACLF,MAAM,CAACC,OAAP,CAAe,OAAf,IAA0BI,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAA1B,CADK,CACyC;EACjD;;EACD,OAAOF,MAAP;AACH,CARD,EAQG,UAAAO,KAAK,EAAI;EACR,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAVD,E,CAYA;AACA;;AACAb,OAAO,CAACI,YAAR,CAAqBY,QAArB,CAA8BX,GAA9B,CACI,UAAAW,QAAQ,EAAI;EACR,IAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAnB,CADQ,CAER;;EACA,IAAIF,QAAQ,CAACV,MAAT,CAAgBa,YAAhB,KAAiC,MAArC,EAA6C;IACzC,OAAOF,GAAP;EACH,CALO,CAMR;;;EACA,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;IACzBA,GAAG,GAAGA,GAAG,GAAGN,IAAI,CAACC,KAAL,CAAWK,GAAX,CAAH,GAAqBA,GAA9B;EACH,CATO,CAUR;;;EACA,IAAGA,GAAG,CAACG,IAAJ,KAAa,KAAhB,EAAsB;IAClBrB,SAAS,CAACsB,OAAV,CAAkB;MACdC,OAAO,EAAEL,GAAG,CAACM,GADC;MAEdC,IAAI,EAAE;IAFQ,CAAlB;EAIH;;EACD,OAAOP,GAAP;AACH,CAnBL,EAoBI,UAAAJ,KAAK,EAAI;EACLY,OAAO,CAACC,GAAR,CAAY,QAAQb,KAApB,EADK,CACsB;;EAC3B,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAvBL;AA2BA,eAAeb,OAAf"},"metadata":{},"sourceType":"module"}